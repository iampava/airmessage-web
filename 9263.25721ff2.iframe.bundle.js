"use strict";(self.webpackChunkairmessage_react=self.webpackChunkairmessage_react||[]).push([[9263],{"./src/connection/connectionManager.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{rj:()=>addConnectionListener,nJ:()=>addRemoteUpdateListener,$j:()=>connect,P4:()=>createChat,UB:()=>faceTimeSupportedEmitter,ce:()=>fetchAttachment,AN:()=>fetchThread,jK:()=>getActiveCommVer,bW:()=>getActiveProxyType,E2:()=>getServerComputerName,fu:()=>getServerSoftwareVersion,vY:()=>getServerSystemVersion,yY:()=>initiateFaceTimeCall,EW:()=>installRemoteUpdate,fY:()=>messageUpdateEmitter,JZ:()=>modifierUpdateEmitter,Hs:()=>removeConnectionListener,Bc:()=>removeRemoteUpdateListener,Rp:()=>requestFaceTimeLink,kB:()=>sendFile,bG:()=>sendMessage,mY:()=>connectionManager_targetCommVer,FB:()=>targetCommVerString});class DataProxy{pendingErrorCode=void 0;serverRequestsEncryption=!1;stopWithReason(reason){this.pendingErrorCode=reason,this.stop()}notifyOpen(){this.listener?.onOpen()}notifyClose(reason){this.pendingErrorCode?(this.listener?.onClose(this.pendingErrorCode),this.pendingErrorCode=void 0):this.listener?.onClose(reason)}notifyMessage(data,isEncrypted){this.listener?.onMessage(data,isEncrypted)}}var bytebuffer=__webpack_require__("./node_modules/bytebuffer/dist/bytebuffer.js"),bytebuffer_default=__webpack_require__.n(bytebuffer),index_esm=__webpack_require__("./node_modules/firebase/auth/dist/index.esm.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");let StorageKey=function(StorageKey){return StorageKey.InstallationID="installationID",StorageKey}({});function getInstallationID(){const installationID=localStorage.getItem(StorageKey.InstallationID);if(installationID)return installationID;{const installationID=(0,v4.Z)();return localStorage.setItem(StorageKey.InstallationID,installationID),installationID}}var stateCodes=__webpack_require__("./src/data/stateCodes.ts"),secrets=__webpack_require__("./src/secrets.ts"),encryptionUtils=__webpack_require__("./src/util/encryptionUtils.ts");class TaskQueue{enqueue(value){void 0===this.previousTask?this.previousTask=value():this.previousTask=this.previousTask.then(value)}}class DataProxyConnect extends DataProxy{proxyType="Connect";taskQueueEncrypt=new TaskQueue;taskQueueDecrypt=new TaskQueue;start(){(0,index_esm.wU)((0,index_esm.v0)().currentUser).then((idToken=>{const url=new URL(secrets.Vb);url.searchParams.set("communications",String(1)),url.searchParams.set("is_server",String(!1)),url.searchParams.set("installation_id",getInstallationID()),url.searchParams.set("id_token",idToken),this.socket=new WebSocket(url.toString()),this.socket.binaryType="arraybuffer",this.socket.onopen=()=>{this.handshakeTimeout=setTimeout(this.handleHandshakeTimeout,8e3)},this.socket.onmessage=event=>{this.handleMessage(event.data)},this.socket.onclose=event=>{this.notifyClose(DataProxyConnect.mapErrorCode(event.code))}})).catch((error=>{console.warn(error),this.notifyClose(stateCodes.nD.InternalError)}))}stop(){this.socket&&this.socket.close()}send(data,encrypt){this.taskQueueEncrypt.enqueue((async()=>{const supportsEncryption=this.serverRequestsEncryption;if(supportsEncryption&&!(0,encryptionUtils.p)())throw new Error("The server requests encryption, but no password is set");const isEncrypted=encrypt&&supportsEncryption;isEncrypted&&(data=await(0,encryptionUtils.q6)(data));const byteBuffer=bytebuffer_default().allocate(5+data.byteLength);byteBuffer.writeInt(100),isEncrypted?byteBuffer.writeByte(-100):supportsEncryption?byteBuffer.writeByte(-101):byteBuffer.writeByte(-102),byteBuffer.append(data),this.socket&&this.socket.send(byteBuffer.flip().toArrayBuffer())}))}sendTokenAdd(token){const byteBuffer=(new(bytebuffer_default())).writeInt(110).writeString(token);this.socket.send(byteBuffer.flip().toArrayBuffer())}sendTokenRemove(token){const byteBuffer=(new(bytebuffer_default())).writeInt(111).writeString(token);this.socket.send(byteBuffer.flip().toArrayBuffer())}handleMessage(data){const byteBuffer=bytebuffer_default().wrap(data);switch(byteBuffer.readInt()){case 0:clearTimeout(this.handshakeTimeout),this.notifyOpen();break;case 100:{let isSecure,isEncrypted;const encryptionValue=byteBuffer.readByte();if(-100===encryptionValue)isSecure=isEncrypted=!0;else if(-101===encryptionValue)isSecure=isEncrypted=!1;else{if(-102!==encryptionValue)throw new Error("Received unknown encryption value: "+encryptionValue);isSecure=!0,isEncrypted=!1}let data=byteBuffer.compact().toArrayBuffer();(0,encryptionUtils.p)()?this.taskQueueDecrypt.enqueue((async()=>{isEncrypted&&(data=await(0,encryptionUtils.ow)(data)),this.notifyMessage(data,isSecure)})):this.notifyMessage(data,isSecure);break}}}handleHandshakeTimeout(){this.stop()}static mapErrorCode(wsCode){switch(wsCode){case 1e3:case 1006:return stateCodes.nD.Internet;case 1002:case 1008:return stateCodes.nD.BadRequest;case 4e3:return stateCodes.nD.ClientOutdated;case 4001:return stateCodes.nD.ConnectNoGroup;case 4002:return stateCodes.nD.ConnectNoCapacity;case 4003:return stateCodes.nD.ConnectAccountValidation;case 4005:return stateCodes.nD.ConnectNoActivation;case 4006:return stateCodes.nD.ConnectOtherLocation;default:return stateCodes.nD.ExternalError}}}class CommunicationsManager{constructor(dataProxy){this.dataProxy=dataProxy,dataProxy.listener={onOpen:()=>{this.handleOpen()},onClose:reason=>{this.listener?.onClose(reason),this.handleClose(reason)},onMessage:(data,isEncrypted)=>{this.handleMessage(data,isEncrypted)}}}connect(){this.dataProxy.start()}disconnect(code){code?this.dataProxy.stopWithReason(code):this.dataProxy.stop()}onHandshake(installationID,deviceName,systemVersion,softwareVersion,supportsFaceTime=!1){this.listener?.onOpen(deviceName,systemVersion,softwareVersion,supportsFaceTime)}}const textDecoder=new TextDecoder;class AirUnpacker{constructor(data){this.buffer=bytebuffer_default().wrap(data)}unpackBoolean(){return 1===this.buffer.readByte()}unpackShort(){return this.buffer.readShort()}unpackInt(){return this.buffer.readInt()}unpackArrayHeader=this.unpackInt;unpackLong(){let val=4294967296*this.buffer.readUint32()+this.buffer.readUint32();return val<0&&(val+=4294967296),val}unpackDouble(){return this.buffer.readDouble()}unpackString(){return textDecoder.decode(this.unpackPayload())}unpackNullableString(){return this.unpackBoolean()?this.unpackString():void 0}unpackStringArray(){const length=this.unpackArrayHeader(),value=[];for(let i=0;i<length;i++)value[i]=this.unpackString();return value}unpackPayload(){const length=this.unpackInt();return this.buffer.readBytes(length).toArrayBuffer()}unpackNullablePayload(){return this.unpackBoolean()?this.unpackPayload():void 0}}class ProtocolManager{constructor(communicationsManager,dataProxy){this.communicationsManager=communicationsManager,this.dataProxy=dataProxy}}var ua_parser=__webpack_require__("./node_modules/ua-parser-js/src/ua-parser.js"),pako_esm=__webpack_require__("./node_modules/pako/dist/pako.esm.mjs");const textEncoder=new TextEncoder;class AirPacker{static instance=new AirPacker(bytebuffer_default().allocate(4194304));static get(){return this.instance}static initialize(bufferSize){return new AirPacker(bytebuffer_default().allocate(bufferSize))}constructor(buffer){this.buffer=buffer}packBoolean(value){this.buffer.writeByte(value?1:0)}packShort(value){this.buffer.writeShort(value)}packInt(value){this.buffer.writeInt(value)}packArrayHeader=this.packInt;packLong(value){this.buffer.writeLong(value)}packDouble(value){this.buffer.writeDouble(value)}packString(value){this.packPayload(textEncoder.encode(value))}packNullableString(value){value?(this.packBoolean(!0),this.packString(value)):this.packBoolean(!1)}packStringArray(value){this.packArrayHeader(value.length);for(const entry of value)this.packString(entry)}packPayload(value){this.packInt(value.byteLength),this.buffer.append(value)}packNullablePayload(value){value?(this.packBoolean(!0),this.packPayload(value)):this.packBoolean(!1)}toArrayBuffer(){return this.buffer.buffer.slice(0,this.buffer.offset)}reset(){this.buffer.reset()}}var spark_md5=__webpack_require__("./node_modules/spark-md5/spark-md5.js"),spark_md5_default=__webpack_require__.n(spark_md5);class TransferAccumulator{}class InflatorAccumulator extends TransferAccumulator{inflator=new pako_esm.ZP.Inflate;accumulatedDataOffset=0;push(data){this.inflator.push(data),this.accumulatedDataOffset+=data.byteLength}get data(){if(this.inflator.err)throw this.inflator.err;return new Blob([this.inflator.result])}get length(){return this.accumulatedDataOffset}}var conversationUtils=__webpack_require__("./src/util/conversationUtils.ts"),encodingUtils=__webpack_require__("./src/util/encodingUtils.ts");var NRCMessageReceiptState=function(NRCMessageReceiptState){return NRCMessageReceiptState[NRCMessageReceiptState.Idle=0]="Idle",NRCMessageReceiptState[NRCMessageReceiptState.Sent=1]="Sent",NRCMessageReceiptState[NRCMessageReceiptState.Delivered=2]="Delivered",NRCMessageReceiptState[NRCMessageReceiptState.Read=3]="Read",NRCMessageReceiptState}(NRCMessageReceiptState||{}),NRCMessageDBState=function(NRCMessageDBState){return NRCMessageDBState[NRCMessageDBState.OK=0]="OK",NRCMessageDBState[NRCMessageDBState.Unknown=1]="Unknown",NRCMessageDBState[NRCMessageDBState.Network=2]="Network",NRCMessageDBState[NRCMessageDBState.Unregistered=3]="Unregistered",NRCMessageDBState}(NRCMessageDBState||{}),NRCAuthenticationResult=function(NRCAuthenticationResult){return NRCAuthenticationResult[NRCAuthenticationResult.OK=0]="OK",NRCAuthenticationResult[NRCAuthenticationResult.Unauthorized=1]="Unauthorized",NRCAuthenticationResult[NRCAuthenticationResult.BadRequest=2]="BadRequest",NRCAuthenticationResult}(NRCAuthenticationResult||{}),NRCAttachmentError=function(NRCAttachmentError){return NRCAttachmentError[NRCAttachmentError.NotFound=1]="NotFound",NRCAttachmentError[NRCAttachmentError.NotSaved=2]="NotSaved",NRCAttachmentError[NRCAttachmentError.Unreadable=3]="Unreadable",NRCAttachmentError[NRCAttachmentError.IOError=4]="IOError",NRCAttachmentError}(NRCAttachmentError||{}),NRCSendResult=function(NRCSendResult){return NRCSendResult[NRCSendResult.OK=0]="OK",NRCSendResult[NRCSendResult.ScriptError=1]="ScriptError",NRCSendResult[NRCSendResult.BadRequest=2]="BadRequest",NRCSendResult[NRCSendResult.Unauthorized=3]="Unauthorized",NRCSendResult[NRCSendResult.NoConversation=4]="NoConversation",NRCSendResult[NRCSendResult.RequestTimeout=5]="RequestTimeout",NRCSendResult}(NRCSendResult||{}),NRCCreateChatResult=function(NRCCreateChatResult){return NRCCreateChatResult[NRCCreateChatResult.OK=0]="OK",NRCCreateChatResult[NRCCreateChatResult.ScriptError=1]="ScriptError",NRCCreateChatResult[NRCCreateChatResult.BadRequest=2]="BadRequest",NRCCreateChatResult[NRCCreateChatResult.Unauthorized=3]="Unauthorized",NRCCreateChatResult}(NRCCreateChatResult||{}),NSTConversationItemType=function(NSTConversationItemType){return NSTConversationItemType[NSTConversationItemType.Message=0]="Message",NSTConversationItemType[NSTConversationItemType.ParticipantAction=1]="ParticipantAction",NSTConversationItemType[NSTConversationItemType.ChatRename=2]="ChatRename",NSTConversationItemType}(NSTConversationItemType||{}),NSTModifierType=function(NSTModifierType){return NSTModifierType[NSTModifierType.Activity=0]="Activity",NSTModifierType[NSTModifierType.Sticker=1]="Sticker",NSTModifierType[NSTModifierType.Tapback=2]="Tapback",NSTModifierType}(NSTModifierType||{}),NSTGroupActionType=function(NSTGroupActionType){return NSTGroupActionType[NSTGroupActionType.Unknown=0]="Unknown",NSTGroupActionType[NSTGroupActionType.Join=1]="Join",NSTGroupActionType[NSTGroupActionType.Leave=2]="Leave",NSTGroupActionType}(NSTGroupActionType||{});class ClientProtocol4 extends ProtocolManager{processData(data,wasEncrypted){this.communicationsManager.listener?.onPacket();try{const unpacker=new AirUnpacker(data),messageType=unpacker.unpackInt();wasEncrypted?this.processDataSecure(messageType,unpacker):this.processDataInsecure(messageType,unpacker)}catch(error){console.warn(error)}}processDataInsecure(messageType,unpacker){switch(messageType){case 0:this.communicationsManager.disconnect(stateCodes.nD.Connection);break;case 1:{const packer=AirPacker.get();try{packer.packInt(2),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}break}case 101:this.handleMessageAuthentication(unpacker)}}processDataSecure(messageType,unpacker){switch(messageType){case 200:case 201:this.handleMessageUpdate(unpacker);break;case 206:this.handleConversationUpdate(unpacker);break;case 207:this.handleModifierUpdate(unpacker);break;case 208:this.handleMessageAttachmentRequest(unpacker);break;case 209:this.handleMessageAttachmentRequestConfirm(unpacker);break;case 210:this.handleMessageAttachmentRequestFail(unpacker);break;case 211:this.handleMessageIDUpdate(unpacker);break;case 300:this.handleMessageLiteConversationRetrieval(unpacker);break;case 301:this.handleMessageLiteThreadRetrieval(unpacker);break;case 400:this.handleMessageSendResult(unpacker);break;case 405:this.handleMessageCreateChat(unpacker);break;default:this.processDataInsecure(messageType,unpacker)}}handleMessageAuthentication(unpacker){this.communicationsManager.stopTimeoutTimer();const resultCode=unpacker.unpackInt();if(resultCode!==NRCAuthenticationResult.OK){switch(resultCode){case NRCAuthenticationResult.BadRequest:this.communicationsManager.disconnect(stateCodes.nD.BadRequest);break;case NRCAuthenticationResult.Unauthorized:this.communicationsManager.disconnect(stateCodes.nD.Unauthorized);break;default:this.communicationsManager.disconnect(stateCodes.nD.Connection)}return}const installationID=unpacker.unpackString(),deviceName=unpacker.unpackString(),systemVersion=unpacker.unpackString(),softwareVersion=unpacker.unpackString();this.communicationsManager.onHandshake(installationID,deviceName,systemVersion,softwareVersion)}handleMessageUpdate(unpacker){const messages=unpackArray(unpacker,unpackConversationItem).reverse();this.communicationsManager.listener?.onMessageUpdate(messages)}handleConversationUpdate(unpacker){const conversations=unpackArray(unpacker,unpackRequestedConversation);this.communicationsManager.listener?.onConversationUpdate(conversations)}handleModifierUpdate(unpacker){const modifiers=unpackArray(unpacker,unpackModifier);this.communicationsManager.listener?.onModifierUpdate(modifiers)}handleMessageAttachmentRequest(unpacker){const requestID=unpacker.unpackShort(),requestIndex=unpacker.unpackInt();let downloadFileName,downloadFileType,fileLength;0===requestIndex&&(downloadFileName=unpacker.unpackNullableString(),downloadFileType=unpacker.unpackNullableString(),fileLength=unpacker.unpackLong());const isLast=unpacker.unpackBoolean(),fileData=unpacker.unpackPayload();0===requestIndex&&this.communicationsManager.listener?.onFileRequestStart(requestID,downloadFileName,downloadFileType,fileLength,new InflatorAccumulator),this.communicationsManager.listener?.onFileRequestData(requestID,fileData),isLast&&this.communicationsManager.listener?.onFileRequestComplete(requestID)}handleMessageAttachmentRequestConfirm(unpacker){}handleMessageAttachmentRequestFail(unpacker){const requestID=unpacker.unpackShort(),errorCode=function mapAttachmentErrorCode(code){switch(code){case NRCAttachmentError.NotFound:return stateCodes.Xh.ServerNotFound;case NRCAttachmentError.NotSaved:return stateCodes.Xh.ServerNotSaved;case NRCAttachmentError.Unreadable:return stateCodes.Xh.ServerUnreadable;case NRCAttachmentError.IOError:return stateCodes.Xh.ServerIO;default:return stateCodes.Xh.ServerUnknown}}(unpacker.unpackInt());this.communicationsManager.listener?.onFileRequestFail(requestID,errorCode)}handleMessageIDUpdate(unpacker){const messageID=unpacker.unpackLong();this.communicationsManager.listener?.onIDUpdate(messageID)}handleMessageLiteConversationRetrieval(unpacker){const conversations=unpackArray(unpacker,unpackPreviewConversation);this.communicationsManager.listener?.onMessageConversations(conversations)}handleMessageLiteThreadRetrieval(unpacker){const chatGUID=unpacker.unpackString(),firstMessageID=unpacker.unpackBoolean()?unpacker.unpackLong():void 0,conversationItems=unpackArray(unpacker,unpackConversationItem).reverse();this.communicationsManager.listener?.onMessageThread(chatGUID,firstMessageID,conversationItems)}handleMessageSendResult(unpacker){const requestID=unpacker.unpackShort(),errorCode=function mapMessageErrorCode(code){switch(code){case NRCSendResult.OK:return;case NRCSendResult.ScriptError:return stateCodes.FO.ServerExternal;case NRCSendResult.BadRequest:return stateCodes.FO.ServerBadRequest;case NRCSendResult.Unauthorized:return stateCodes.FO.ServerUnauthorized;case NRCSendResult.NoConversation:return stateCodes.FO.AppleNoConversation;case NRCSendResult.RequestTimeout:return stateCodes.FO.ServerTimeout;default:return stateCodes.FO.ServerUnknown}}(unpacker.unpackInt()),details=unpacker.unpackNullableString(),messageError=void 0===errorCode?void 0:{code:errorCode,detail:details};this.communicationsManager.listener?.onSendMessageResponse(requestID,messageError)}handleMessageCreateChat(unpacker){const requestID=unpacker.unpackShort(),errorCode=function mapCreateChatCode(code){switch(code){case NRCCreateChatResult.OK:return;case NRCCreateChatResult.ScriptError:return stateCodes.o_.ScriptError;case NRCCreateChatResult.BadRequest:return stateCodes.o_.BadRequest;case NRCCreateChatResult.Unauthorized:return stateCodes.o_.Unauthorized;default:return stateCodes.o_.UnknownExternal}}(unpacker.unpackInt()),details=unpacker.unpackNullableString();this.communicationsManager.listener?.onCreateChatResponse(requestID,errorCode,details)}sendPing(){const packer=AirPacker.get();try{packer.packInt(1),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}return!0}async sendAuthenticationRequest(unpacker){const uaParser=new ua_parser.UAParser,browser=uaParser.getBrowser(),os=uaParser.getOS(),browserName=browser.name&&browser.version?`${browser.name} ${browser.version}`:null,platformName=os.name&&os.version?`${os.name} ${os.version}`:null,installationID=getInstallationID();let clientName;clientName=browserName&&platformName?browserName+" — "+platformName:browserName||(platformName||"Unknown browser");const platformID=function mapBrowserAM(browser){switch(browser){case"Chrome":case"Chromium":return"chrome";case"Safari":case"Mobile Safari":return"safari";case"Firefox":return"firefox";case"Edge":return"edge";default:return"browser"}}(browser.name??"browser");if(unpacker.unpackBoolean()){if(!(0,encryptionUtils.p)())return this.communicationsManager.disconnect(stateCodes.nD.Unauthorized),!1;this.dataProxy.serverRequestsEncryption=!0;const transmissionCheck=unpacker.unpackPayload(),packer=AirPacker.get();try{let secureData;packer.packInt(101);{const securePacker=AirPacker.initialize(1024);securePacker.packPayload(transmissionCheck),securePacker.packString(installationID),securePacker.packString(clientName),securePacker.packString(platformID),secureData=securePacker.toArrayBuffer()}packer.packPayload(await(0,encryptionUtils.q6)(secureData)),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}}else{this.dataProxy.serverRequestsEncryption=!1;const packer=AirPacker.get();try{packer.packInt(101),packer.packString(installationID),packer.packString(clientName),packer.packString(platformID),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}}return!0}sendMessage(requestID,conversation,message){const packer=AirPacker.get();try{"linked"===conversation.type?packer.packInt(401):packer.packInt(402),packer.packShort(requestID),"linked"===conversation.type?packer.packString(conversation.guid):(packer.packStringArray(conversation.members),packer.packString(conversation.service)),packer.packString(message),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}async sendFile(requestID,conversation,file,progressCallback){const fileData=await file.arrayBuffer(),hash=spark_md5_default().ArrayBuffer.hash(fileData),compressedData=pako_esm.ZP.deflate(new Uint8Array(fileData));try{let chunkIndex=0,readOffset=0;for(;readOffset<compressedData.length;){const newOffset=readOffset+2097152,chunkData=compressedData.slice(readOffset,newOffset),packer=AirPacker.get();try{"linked"===conversation.type?packer.packInt(403):packer.packInt(404),packer.packShort(requestID),packer.packInt(chunkIndex),packer.packBoolean(newOffset>=file.size),"linked"===conversation.type?packer.packString(conversation.guid):packer.packStringArray(conversation.members),packer.packPayload(chunkData),0===chunkIndex&&(packer.packString(file.name),"unlinked"===conversation.type&&packer.packString(conversation.service)),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}chunkIndex++,readOffset=newOffset,progressCallback(Math.min(readOffset,file.size))}}catch(error){return Promise.reject({code:stateCodes.FO.LocalIO})}return hash}requestAttachmentDownload(requestID,attachmentGUID){const packer=AirPacker.get();try{packer.packInt(208),packer.packShort(requestID),packer.packInt(2097152),packer.packString(attachmentGUID),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestLiteConversation(){const packer=AirPacker.get();try{packer.packInt(300),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestConversationInfo(chatGUIDs){const packer=AirPacker.get();try{packer.packInt(206),packer.packArrayHeader(chatGUIDs.length);for(const chatGUID of chatGUIDs)packer.packString(chatGUID);this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestLiteThread(chatGUID,firstMessageID){const packer=AirPacker.get();try{packer.packInt(301),packer.packString(chatGUID),firstMessageID?(packer.packBoolean(!0),packer.packLong(firstMessageID)):packer.packBoolean(!1),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestChatCreation(requestID,members,service){const packer=AirPacker.get();try{packer.packInt(405),packer.packShort(requestID),packer.packArrayHeader(members.length);for(const member of members)packer.packString(member);packer.packString(service),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestRetrievalTime(timeLower,timeUpper){const packer=AirPacker.get();try{packer.packInt(201),packer.packLong(timeLower.getTime()),packer.packLong(timeUpper.getTime()),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestRetrievalID(idLower,timeLower,timeUpper){const packer=AirPacker.get();try{packer.packInt(202),packer.packLong(idLower),packer.packLong(timeLower.getTime()),packer.packLong(timeUpper.getTime()),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestInstallRemoteUpdate(updateID){return!1}requestFaceTimeLink(){return!1}initiateFaceTimeCall(addresses){return!1}handleIncomingFaceTimeCall(caller,accept){return!1}dropFaceTimeCallServer(){return!1}}function unpackPreviewConversation(unpacker){const guid=unpacker.unpackString(),service=unpacker.unpackString(),name=unpacker.unpackNullableString(),membersLength=unpacker.unpackArrayHeader(),members=[];for(let i=0;i<membersLength;i++)members[i]=unpacker.unpackString();const previewDate=new Date(unpacker.unpackLong());unpacker.unpackNullableString();const previewText=unpacker.unpackNullableString(),previewSendStyle=unpacker.unpackNullableString(),previewAttachmentsLength=unpacker.unpackArrayHeader(),previewAttachments=[];for(let i=0;i<previewAttachmentsLength;i++)previewAttachments[i]=unpacker.unpackString();return{localID:(0,conversationUtils.mM)(),guid,service,name,members,preview:{type:stateCodes.mZ.Message,date:previewDate,text:previewText,sendStyle:previewSendStyle,attachments:previewAttachments},unreadMessages:!1,localOnly:!1}}function unpackRequestedConversation(unpacker){const guid=unpacker.unpackString();if(unpacker.unpackBoolean()){const service=unpacker.unpackString(),name=unpacker.unpackNullableString(),membersLength=unpacker.unpackArrayHeader(),members=[];for(let i=0;i<membersLength;i++)members[i]=unpacker.unpackString();return[guid,{localID:(0,conversationUtils.mM)(),guid,service,name,members,preview:{type:stateCodes.mZ.ChatCreation,date:new Date},unreadMessages:!1,localOnly:!1}]}return[guid,void 0]}function unpackArray(unpacker,unpackerFunction){const array=[],count=unpacker.unpackArrayHeader();for(let i=0;i<count;i++){const item=unpackerFunction(unpacker);item&&array.push(item)}return array}function unpackConversationItem(unpacker){const itemType=function mapCodeConversationItemType(code){switch(code){case NSTConversationItemType.Message:return stateCodes.QN.Message;case NSTConversationItemType.ParticipantAction:return stateCodes.QN.ParticipantAction;case NSTConversationItemType.ChatRename:return stateCodes.QN.ChatRenameAction;default:return}}(unpacker.unpackInt()),serverID=unpacker.unpackLong(),guid=unpacker.unpackString(),chatGuid=unpacker.unpackString(),date=new Date(unpacker.unpackLong());switch(itemType){default:return console.warn(`Unknown conversation item type ${itemType}`),null;case stateCodes.QN.Message:{const text=unpacker.unpackNullableString(),subject=unpacker.unpackNullableString(),sender=unpacker.unpackNullableString(),attachments=unpackArray(unpacker,unpackAttachment),stickers=unpackArray(unpacker,unpackModifier),tapbacks=unpackArray(unpacker,unpackModifier),sendStyle=unpacker.unpackNullableString(),statusCode=mapCodeMessageStatus(unpacker.unpackInt()),errorCode=function mapCodeDBError(code){switch(code){case NRCMessageDBState.OK:return;case NRCMessageDBState.Unknown:default:return stateCodes.FO.ServerUnknown;case NRCMessageDBState.Network:return stateCodes.FO.AppleNetwork;case NRCMessageDBState.Unregistered:return stateCodes.FO.AppleUnregistered}}(unpacker.unpackInt());return{itemType,serverID,guid,chatGuid,date,text,subject,sender,attachments,stickers,tapbacks,sendStyle,status:statusCode,error:errorCode?{code:errorCode}:void 0,statusDate:new Date(unpacker.unpackLong())}}case stateCodes.QN.ParticipantAction:{const user=unpacker.unpackNullableString(),target=unpacker.unpackNullableString();return{itemType,serverID,guid,chatGuid,date,type:function mapParticipantActionType(code){switch(code){case NSTGroupActionType.Unknown:default:return stateCodes.rk.Unknown;case NSTGroupActionType.Join:return stateCodes.rk.Join;case NSTGroupActionType.Leave:return stateCodes.rk.Leave}}(unpacker.unpackInt()),user,target}}case stateCodes.QN.ChatRenameAction:return{itemType,serverID,guid,chatGuid,date,user:unpacker.unpackNullableString(),chatName:unpacker.unpackNullableString()}}}function unpackAttachment(unpacker){const guid=unpacker.unpackString(),name=unpacker.unpackString(),type=unpacker.unpackNullableString()??"application/octet-stream",size=unpacker.unpackLong(),checksum=unpacker.unpackNullablePayload(),checksumString=checksum&&(0,encodingUtils.CB)(checksum);unpacker.unpackLong();return{guid,name,type,size,checksum:checksumString}}function unpackModifier(unpacker){const type=unpacker.unpackInt(),messageGuid=unpacker.unpackString();switch(type){default:return console.warn(`Unknown modifier item type ${type}`),null;case NSTModifierType.Activity:{const status=mapCodeMessageStatus(unpacker.unpackInt()),date=new Date(unpacker.unpackLong());return{type:stateCodes.KI.StatusUpdate,messageGuid,status,date}}case NSTModifierType.Sticker:{const index=unpacker.unpackInt();unpacker.unpackString();const sender=unpacker.unpackNullableString(),date=new Date(unpacker.unpackLong()),data=pako_esm.ZP.inflate(new Uint8Array(unpacker.unpackPayload())),dataType=unpacker.unpackString();return{type:stateCodes.KI.Sticker,messageGuid,messageIndex:index,sender,date,dataType,data}}case NSTModifierType.Tapback:{const index=unpacker.unpackInt(),sender=unpacker.unpackNullableString(),isAddition=unpacker.unpackBoolean(),dbTapbackType=unpacker.unpackInt(),tapbackType=function mapTapbackType(code){switch(code){case 0:return stateCodes.cM.Love;case 1:return stateCodes.cM.Like;case 2:return stateCodes.cM.Dislike;case 3:return stateCodes.cM.Laugh;case 4:return stateCodes.cM.Emphasis;case 5:return stateCodes.cM.Question;default:return}}(dbTapbackType);return void 0===tapbackType?(console.warn(`Unknown Apple tapback type ${dbTapbackType}`),null):{type:stateCodes.KI.Tapback,messageGuid,messageIndex:index,sender,isAddition,tapbackType}}}}function mapCodeMessageStatus(code){switch(code){default:case NRCMessageReceiptState.Idle:return stateCodes.Bu.Idle;case NRCMessageReceiptState.Sent:return stateCodes.Bu.Sent;case NRCMessageReceiptState.Delivered:return stateCodes.Bu.Delivered;case NRCMessageReceiptState.Read:return stateCodes.Bu.Read}}var clientProtocol5_NRCMessageReceiptState=function(NRCMessageReceiptState){return NRCMessageReceiptState[NRCMessageReceiptState.Idle=0]="Idle",NRCMessageReceiptState[NRCMessageReceiptState.Sent=1]="Sent",NRCMessageReceiptState[NRCMessageReceiptState.Delivered=2]="Delivered",NRCMessageReceiptState[NRCMessageReceiptState.Read=3]="Read",NRCMessageReceiptState}(clientProtocol5_NRCMessageReceiptState||{}),clientProtocol5_NRCMessageDBState=function(NRCMessageDBState){return NRCMessageDBState[NRCMessageDBState.OK=0]="OK",NRCMessageDBState[NRCMessageDBState.Unknown=1]="Unknown",NRCMessageDBState[NRCMessageDBState.Network=2]="Network",NRCMessageDBState[NRCMessageDBState.Unregistered=3]="Unregistered",NRCMessageDBState}(clientProtocol5_NRCMessageDBState||{}),clientProtocol5_NRCAuthenticationResult=function(NRCAuthenticationResult){return NRCAuthenticationResult[NRCAuthenticationResult.OK=0]="OK",NRCAuthenticationResult[NRCAuthenticationResult.Unauthorized=1]="Unauthorized",NRCAuthenticationResult[NRCAuthenticationResult.BadRequest=2]="BadRequest",NRCAuthenticationResult}(clientProtocol5_NRCAuthenticationResult||{}),clientProtocol5_NRCAttachmentError=function(NRCAttachmentError){return NRCAttachmentError[NRCAttachmentError.NotFound=1]="NotFound",NRCAttachmentError[NRCAttachmentError.NotSaved=2]="NotSaved",NRCAttachmentError[NRCAttachmentError.Unreadable=3]="Unreadable",NRCAttachmentError[NRCAttachmentError.IOError=4]="IOError",NRCAttachmentError}(clientProtocol5_NRCAttachmentError||{}),clientProtocol5_NRCSendResult=function(NRCSendResult){return NRCSendResult[NRCSendResult.OK=0]="OK",NRCSendResult[NRCSendResult.ScriptError=1]="ScriptError",NRCSendResult[NRCSendResult.BadRequest=2]="BadRequest",NRCSendResult[NRCSendResult.Unauthorized=3]="Unauthorized",NRCSendResult[NRCSendResult.NoConversation=4]="NoConversation",NRCSendResult[NRCSendResult.RequestTimeout=5]="RequestTimeout",NRCSendResult[NRCSendResult.InternalError=6]="InternalError",NRCSendResult}(clientProtocol5_NRCSendResult||{}),clientProtocol5_NRCCreateChatResult=function(NRCCreateChatResult){return NRCCreateChatResult[NRCCreateChatResult.OK=0]="OK",NRCCreateChatResult[NRCCreateChatResult.ScriptError=1]="ScriptError",NRCCreateChatResult[NRCCreateChatResult.BadRequest=2]="BadRequest",NRCCreateChatResult[NRCCreateChatResult.Unauthorized=3]="Unauthorized",NRCCreateChatResult[NRCCreateChatResult.NotSupported=4]="NotSupported",NRCCreateChatResult}(clientProtocol5_NRCCreateChatResult||{}),NRCUpdateError=function(NRCUpdateError){return NRCUpdateError[NRCUpdateError.Download=0]="Download",NRCUpdateError[NRCUpdateError.BadPackage=1]="BadPackage",NRCUpdateError[NRCUpdateError.Internal=2]="Internal",NRCUpdateError[NRCUpdateError.ReadOnlyVolume=3]="ReadOnlyVolume",NRCUpdateError}(NRCUpdateError||{}),NRCFaceTimeCallInitiate=function(NRCFaceTimeCallInitiate){return NRCFaceTimeCallInitiate[NRCFaceTimeCallInitiate.OK=0]="OK",NRCFaceTimeCallInitiate[NRCFaceTimeCallInitiate.BadMembers=1]="BadMembers",NRCFaceTimeCallInitiate[NRCFaceTimeCallInitiate.AppleScriptError=2]="AppleScriptError",NRCFaceTimeCallInitiate}(NRCFaceTimeCallInitiate||{}),NRCFaceTimeCallHandled=function(NRCFaceTimeCallHandled){return NRCFaceTimeCallHandled[NRCFaceTimeCallHandled.Accepted=0]="Accepted",NRCFaceTimeCallHandled[NRCFaceTimeCallHandled.Rejected=1]="Rejected",NRCFaceTimeCallHandled[NRCFaceTimeCallHandled.Error=2]="Error",NRCFaceTimeCallHandled}(NRCFaceTimeCallHandled||{}),clientProtocol5_NSTConversationItemType=function(NSTConversationItemType){return NSTConversationItemType[NSTConversationItemType.Message=0]="Message",NSTConversationItemType[NSTConversationItemType.ParticipantAction=1]="ParticipantAction",NSTConversationItemType[NSTConversationItemType.ChatRename=2]="ChatRename",NSTConversationItemType}(clientProtocol5_NSTConversationItemType||{}),clientProtocol5_NSTModifierType=function(NSTModifierType){return NSTModifierType[NSTModifierType.Activity=0]="Activity",NSTModifierType[NSTModifierType.Sticker=1]="Sticker",NSTModifierType[NSTModifierType.Tapback=2]="Tapback",NSTModifierType}(clientProtocol5_NSTModifierType||{}),clientProtocol5_NSTGroupActionType=function(NSTGroupActionType){return NSTGroupActionType[NSTGroupActionType.Unknown=0]="Unknown",NSTGroupActionType[NSTGroupActionType.Join=1]="Join",NSTGroupActionType[NSTGroupActionType.Leave=2]="Leave",NSTGroupActionType}(clientProtocol5_NSTGroupActionType||{});class ClientProtocol5 extends ProtocolManager{processData(data,wasEncrypted){this.communicationsManager.listener?.onPacket();try{const unpacker=new AirUnpacker(data),messageType=unpacker.unpackInt();wasEncrypted?this.processDataSecure(messageType,unpacker):this.processDataInsecure(messageType,unpacker)}catch(error){console.warn(error)}}processDataInsecure(messageType,unpacker){switch(messageType){case 0:this.communicationsManager.disconnect(stateCodes.nD.Connection);break;case 1:{const packer=AirPacker.get();try{packer.packInt(2),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}break}case 101:this.handleMessageAuthentication(unpacker)}}processDataSecure(messageType,unpacker){switch(messageType){case 200:case 201:this.handleMessageUpdate(unpacker);break;case 206:this.handleConversationUpdate(unpacker);break;case 207:this.handleModifierUpdate(unpacker);break;case 208:this.handleMessageAttachmentRequest(unpacker);break;case 209:this.handleMessageAttachmentRequestConfirm(unpacker);break;case 210:this.handleMessageAttachmentRequestFail(unpacker);break;case 211:this.handleMessageIDUpdate(unpacker);break;case 300:this.handleMessageLiteConversationRetrieval(unpacker);break;case 301:this.handleMessageLiteThreadRetrieval(unpacker);break;case 400:this.handleMessageSendResult(unpacker);break;case 405:this.handleMessageCreateChat(unpacker);break;case 500:this.handleMessageSoftwareUpdateListing(unpacker);break;case 501:this.handleMessageSoftwareUpdateInstall(unpacker);break;case 502:this.handleMessageSoftwareUpdateError(unpacker);break;case 600:this.handleMessageFaceTimeCreateLink(unpacker);break;case 601:this.handleMessageFaceTimeOutgoingInitiate(unpacker);break;case 602:this.handleMessageFaceTimeOutgoingHandled(unpacker);break;case 603:this.handleMessageFaceTimeIncomingCallerUpdate(unpacker);break;case 604:this.handleMessageFaceTimeIncomingHandle(unpacker);break;default:this.processDataInsecure(messageType,unpacker)}}handleMessageAuthentication(unpacker){this.communicationsManager.stopTimeoutTimer();const resultCode=unpacker.unpackInt();if(resultCode!==clientProtocol5_NRCAuthenticationResult.OK){switch(resultCode){case clientProtocol5_NRCAuthenticationResult.BadRequest:this.communicationsManager.disconnect(stateCodes.nD.BadRequest);break;case clientProtocol5_NRCAuthenticationResult.Unauthorized:this.communicationsManager.disconnect(stateCodes.nD.Unauthorized);break;default:this.communicationsManager.disconnect(stateCodes.nD.Connection)}return}const installationID=unpacker.unpackString(),deviceName=unpacker.unpackString(),systemVersion=unpacker.unpackString(),softwareVersion=unpacker.unpackString();unpacker.unpackString();const supportsFaceTime=unpacker.unpackBoolean();this.communicationsManager.onHandshake(installationID,deviceName,systemVersion,softwareVersion,supportsFaceTime)}handleMessageUpdate(unpacker){const messages=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackConversationItem).reverse();this.communicationsManager.listener?.onMessageUpdate(messages)}handleConversationUpdate(unpacker){const conversations=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackRequestedConversation);this.communicationsManager.listener?.onConversationUpdate(conversations)}handleModifierUpdate(unpacker){const modifiers=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackModifier);this.communicationsManager.listener?.onModifierUpdate(modifiers)}handleMessageAttachmentRequest(unpacker){const requestID=unpacker.unpackShort(),requestIndex=unpacker.unpackInt();let downloadFileName,downloadFileType,fileLength;0===requestIndex&&(downloadFileName=unpacker.unpackNullableString(),downloadFileType=unpacker.unpackNullableString(),fileLength=unpacker.unpackLong());const isLast=unpacker.unpackBoolean(),fileData=unpacker.unpackPayload();0===requestIndex&&this.communicationsManager.listener?.onFileRequestStart(requestID,downloadFileName,downloadFileType,fileLength,new InflatorAccumulator),this.communicationsManager.listener?.onFileRequestData(requestID,fileData),isLast&&this.communicationsManager.listener?.onFileRequestComplete(requestID)}handleMessageAttachmentRequestConfirm(unpacker){}handleMessageAttachmentRequestFail(unpacker){const requestID=unpacker.unpackShort(),errorCode=function clientProtocol5_mapAttachmentErrorCode(code){switch(code){case clientProtocol5_NRCAttachmentError.NotFound:return stateCodes.Xh.ServerNotFound;case clientProtocol5_NRCAttachmentError.NotSaved:return stateCodes.Xh.ServerNotSaved;case clientProtocol5_NRCAttachmentError.Unreadable:return stateCodes.Xh.ServerUnreadable;case clientProtocol5_NRCAttachmentError.IOError:return stateCodes.Xh.ServerIO;default:return stateCodes.Xh.ServerUnknown}}(unpacker.unpackInt());this.communicationsManager.listener?.onFileRequestFail(requestID,errorCode)}handleMessageIDUpdate(unpacker){const messageID=unpacker.unpackLong();this.communicationsManager.listener?.onIDUpdate(messageID)}handleMessageLiteConversationRetrieval(unpacker){const conversations=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackPreviewConversation);this.communicationsManager.listener?.onMessageConversations(conversations)}handleMessageLiteThreadRetrieval(unpacker){const chatGUID=unpacker.unpackString(),firstMessageID=unpacker.unpackBoolean()?unpacker.unpackLong():void 0,conversationItems=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackConversationItem).reverse();this.communicationsManager.listener?.onMessageThread(chatGUID,firstMessageID,conversationItems)}handleMessageSendResult(unpacker){const requestID=unpacker.unpackShort(),errorCode=function clientProtocol5_mapMessageErrorCode(code){switch(code){case clientProtocol5_NRCSendResult.OK:return;case clientProtocol5_NRCSendResult.ScriptError:case clientProtocol5_NRCSendResult.InternalError:return stateCodes.FO.ServerExternal;case clientProtocol5_NRCSendResult.BadRequest:return stateCodes.FO.ServerBadRequest;case clientProtocol5_NRCSendResult.Unauthorized:return stateCodes.FO.ServerUnauthorized;case clientProtocol5_NRCSendResult.NoConversation:return stateCodes.FO.AppleNoConversation;case clientProtocol5_NRCSendResult.RequestTimeout:return stateCodes.FO.ServerTimeout;default:return stateCodes.FO.ServerUnknown}}(unpacker.unpackInt()),details=unpacker.unpackNullableString(),messageError=void 0===errorCode?void 0:{code:errorCode,detail:details};this.communicationsManager.listener?.onSendMessageResponse(requestID,messageError)}handleMessageCreateChat(unpacker){const requestID=unpacker.unpackShort(),errorCode=function clientProtocol5_mapCreateChatCode(code){switch(code){case clientProtocol5_NRCCreateChatResult.OK:return;case clientProtocol5_NRCCreateChatResult.ScriptError:return stateCodes.o_.ScriptError;case clientProtocol5_NRCCreateChatResult.BadRequest:return stateCodes.o_.BadRequest;case clientProtocol5_NRCCreateChatResult.Unauthorized:return stateCodes.o_.Unauthorized;case clientProtocol5_NRCCreateChatResult.NotSupported:return stateCodes.o_.NotSupported;default:return stateCodes.o_.UnknownExternal}}(unpacker.unpackInt()),details=unpacker.unpackNullableString();this.communicationsManager.listener?.onCreateChatResponse(requestID,errorCode,details)}handleMessageSoftwareUpdateListing(unpacker){let updateData;if(unpacker.unpackBoolean()){const updateID=unpacker.unpackInt(),protocolRequirementCount=unpacker.unpackInt(),protocolRequirement=[];for(let i=0;i<protocolRequirementCount;i++)protocolRequirement.push(unpacker.unpackInt());updateData={id:updateID,protocolRequirement,version:unpacker.unpackString(),notes:unpacker.unpackString(),remoteInstallable:unpacker.unpackBoolean()}}this.communicationsManager.listener?.onSoftwareUpdateListing(updateData)}handleMessageSoftwareUpdateInstall(unpacker){const updateInstalling=unpacker.unpackBoolean();this.communicationsManager.listener?.onSoftwareUpdateInstall(updateInstalling)}handleMessageSoftwareUpdateError(unpacker){const errorCode=function mapUpdateErrorCode(code){switch(code){case NRCUpdateError.Download:return stateCodes.Wl.Download;case NRCUpdateError.BadPackage:return stateCodes.Wl.BadPackage;case NRCUpdateError.Internal:return stateCodes.Wl.Internal;case NRCUpdateError.ReadOnlyVolume:return stateCodes.Wl.ReadOnlyVolume;default:return stateCodes.Wl.Unknown}}(unpacker.unpackInt()),errorDetails=unpacker.unpackString();this.communicationsManager.listener?.onSoftwareUpdateError(errorCode,errorDetails)}handleMessageFaceTimeCreateLink(unpacker){let link;unpacker.unpackBoolean()&&(link=unpacker.unpackString()),this.communicationsManager.listener?.onFaceTimeNewLink(link)}handleMessageFaceTimeOutgoingInitiate(unpacker){const resultCode=function mapFaceTimeInitiateCode(code){switch(code){case NRCFaceTimeCallInitiate.OK:return stateCodes.iO.OK;case NRCFaceTimeCallInitiate.BadMembers:return stateCodes.iO.BadMembers;case NRCFaceTimeCallInitiate.AppleScriptError:default:return stateCodes.iO.External}}(unpacker.unpackInt()),errorDetails=unpacker.unpackNullableString();this.communicationsManager.listener?.onFaceTimeOutgoingCallInitiated(resultCode,errorDetails)}handleMessageFaceTimeOutgoingHandled(unpacker){const resultCode=unpacker.unpackInt();if(resultCode===NRCFaceTimeCallHandled.Accepted){const faceTimeLink=unpacker.unpackString();this.communicationsManager.listener?.onFaceTimeOutgoingCallAccepted(faceTimeLink)}else if(resultCode===NRCFaceTimeCallHandled.Rejected)this.communicationsManager.listener?.onFaceTimeOutgoingCallRejected();else if(resultCode===NRCFaceTimeCallHandled.Error){const errorDetails=unpacker.unpackNullableString();this.communicationsManager.listener?.onFaceTimeOutgoingCallError(errorDetails)}}handleMessageFaceTimeIncomingCallerUpdate(unpacker){const caller=unpacker.unpackNullableString();this.communicationsManager.listener?.onFaceTimeIncomingCall(caller)}handleMessageFaceTimeIncomingHandle(unpacker){if(unpacker.unpackBoolean()){const faceTimeLink=unpacker.unpackString();this.communicationsManager.listener?.onFaceTimeIncomingCallHandled(faceTimeLink)}else{const errorDetails=unpacker.unpackNullableString();this.communicationsManager.listener?.onFaceTimeIncomingCallError(errorDetails)}}sendPing(){const packer=AirPacker.get();try{packer.packInt(1),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}return!0}async sendAuthenticationRequest(unpacker){const uaParser=new ua_parser.UAParser,browser=uaParser.getBrowser(),os=uaParser.getOS(),browserName=browser.name&&browser.version?`${browser.name} ${browser.version}`:null,platformName=os.name&&os.version?`${os.name} ${os.version}`:null,installationID=getInstallationID();let clientName;clientName=browserName&&platformName?browserName+" — "+platformName:browserName||(platformName||"Unknown browser");const platformID=function clientProtocol5_mapBrowserAM(browser){switch(browser){case"Chrome":case"Chromium":return"chrome";case"Safari":case"Mobile Safari":return"safari";case"Firefox":return"firefox";case"Edge":return"edge";default:return"browser"}}(browser.name??"browser");if(unpacker.unpackBoolean()){if(!(0,encryptionUtils.p)())return this.communicationsManager.disconnect(stateCodes.nD.Unauthorized),!1;this.dataProxy.serverRequestsEncryption=!0;const transmissionCheck=unpacker.unpackPayload(),packer=AirPacker.get();try{let secureData;packer.packInt(101);{const securePacker=AirPacker.initialize(1024);securePacker.packPayload(transmissionCheck),securePacker.packString(installationID),securePacker.packString(clientName),securePacker.packString(platformID),secureData=securePacker.toArrayBuffer()}packer.packPayload(await(0,encryptionUtils.q6)(secureData)),this.dataProxy.send(packer.toArrayBuffer(),!1)}finally{packer.reset()}}else{this.dataProxy.serverRequestsEncryption=!1;const packer=AirPacker.get();try{packer.packInt(101),packer.packString(installationID),packer.packString(clientName),packer.packString(platformID),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}}return!0}sendMessage(requestID,conversation,message){const packer=AirPacker.get();try{"linked"===conversation.type?packer.packInt(401):packer.packInt(402),packer.packShort(requestID),"linked"===conversation.type?packer.packString(conversation.guid):(packer.packStringArray(conversation.members),packer.packString(conversation.service)),packer.packString(message),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}async sendFile(requestID,conversation,file,progressCallback){const fileData=await file.arrayBuffer(),hash=spark_md5_default().ArrayBuffer.hash(fileData),compressedData=pako_esm.ZP.deflate(new Uint8Array(fileData));try{let chunkIndex=0,readOffset=0;for(;readOffset<compressedData.length;){const newOffset=readOffset+2097152,chunkData=compressedData.slice(readOffset,newOffset),packer=AirPacker.get();try{"linked"===conversation.type?packer.packInt(403):packer.packInt(404),packer.packShort(requestID),packer.packInt(chunkIndex),packer.packBoolean(newOffset>=file.size),packer.packPayload(chunkData),0===chunkIndex&&(packer.packString(file.name),"linked"===conversation.type?packer.packString(conversation.guid):(packer.packStringArray(conversation.members),packer.packString(conversation.service))),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}chunkIndex++,readOffset=newOffset,progressCallback(Math.min(readOffset,file.size))}}catch(error){return Promise.reject({code:stateCodes.FO.LocalIO})}return hash}requestAttachmentDownload(requestID,attachmentGUID){const packer=AirPacker.get();try{packer.packInt(208),packer.packShort(requestID),packer.packInt(2097152),packer.packString(attachmentGUID),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestLiteConversation(){const packer=AirPacker.get();try{packer.packInt(300),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestConversationInfo(chatGUIDs){const packer=AirPacker.get();try{packer.packInt(206),packer.packArrayHeader(chatGUIDs.length);for(const chatGUID of chatGUIDs)packer.packString(chatGUID);this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestLiteThread(chatGUID,firstMessageID){const packer=AirPacker.get();try{packer.packInt(301),packer.packString(chatGUID),firstMessageID?(packer.packBoolean(!0),packer.packLong(firstMessageID)):packer.packBoolean(!1),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestChatCreation(requestID,members,service){const packer=AirPacker.get();try{packer.packInt(405),packer.packShort(requestID),packer.packArrayHeader(members.length);for(const member of members)packer.packString(member);packer.packString(service),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestRetrievalTime(timeLower,timeUpper){const packer=AirPacker.get();try{packer.packInt(201),packer.packLong(timeLower.getTime()),packer.packLong(timeUpper.getTime()),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestRetrievalID(idLower,timeLower,timeUpper){const packer=AirPacker.get();try{packer.packInt(202),packer.packLong(idLower),packer.packLong(timeLower.getTime()),packer.packLong(timeUpper.getTime()),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestInstallRemoteUpdate(updateID){const packer=AirPacker.get();try{packer.packInt(501),packer.packInt(updateID),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}requestFaceTimeLink(){const packer=AirPacker.get();try{packer.packInt(600),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}initiateFaceTimeCall(addresses){const packer=AirPacker.get();try{packer.packInt(601),packer.packArrayHeader(addresses.length);for(const address of addresses)packer.packString(address);this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}handleIncomingFaceTimeCall(caller,accept){const packer=AirPacker.get();try{packer.packInt(604),packer.packString(caller),packer.packBoolean(accept),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}dropFaceTimeCallServer(){const packer=AirPacker.get();try{packer.packInt(605),this.dataProxy.send(packer.toArrayBuffer(),!0)}finally{packer.reset()}return!0}}function clientProtocol5_unpackPreviewConversation(unpacker){const guid=unpacker.unpackString(),service=unpacker.unpackString(),name=unpacker.unpackNullableString(),membersLength=unpacker.unpackArrayHeader(),members=[];for(let i=0;i<membersLength;i++)members[i]=unpacker.unpackString();const previewDate=new Date(unpacker.unpackLong());unpacker.unpackNullableString();const previewText=unpacker.unpackNullableString(),previewSendStyle=unpacker.unpackNullableString(),previewAttachmentsLength=unpacker.unpackArrayHeader(),previewAttachments=[];for(let i=0;i<previewAttachmentsLength;i++)previewAttachments[i]=unpacker.unpackString();return{localID:(0,conversationUtils.mM)(),guid,service,name,members,preview:{type:stateCodes.mZ.Message,date:previewDate,text:previewText,sendStyle:previewSendStyle,attachments:previewAttachments},unreadMessages:!1,localOnly:!1}}function clientProtocol5_unpackRequestedConversation(unpacker){const guid=unpacker.unpackString();if(unpacker.unpackBoolean()){const service=unpacker.unpackString(),name=unpacker.unpackNullableString(),membersLength=unpacker.unpackArrayHeader(),members=[];for(let i=0;i<membersLength;i++)members[i]=unpacker.unpackString();return[guid,{localID:(0,conversationUtils.mM)(),guid,service,name,members,preview:{type:stateCodes.mZ.ChatCreation,date:new Date},unreadMessages:!1,localOnly:!1}]}return[guid,void 0]}function clientProtocol5_unpackArray(unpacker,unpackerFunction){const array=[],count=unpacker.unpackArrayHeader();for(let i=0;i<count;i++){const item=unpackerFunction(unpacker);item&&array.push(item)}return array}function clientProtocol5_unpackConversationItem(unpacker){const itemType=function clientProtocol5_mapCodeConversationItemType(code){switch(code){case clientProtocol5_NSTConversationItemType.Message:return stateCodes.QN.Message;case clientProtocol5_NSTConversationItemType.ParticipantAction:return stateCodes.QN.ParticipantAction;case clientProtocol5_NSTConversationItemType.ChatRename:return stateCodes.QN.ChatRenameAction;default:return}}(unpacker.unpackInt()),serverID=unpacker.unpackLong(),guid=unpacker.unpackString(),chatGuid=unpacker.unpackString(),date=new Date(unpacker.unpackLong());switch(itemType){default:return console.warn(`Unknown conversation item type ${itemType}`),null;case stateCodes.QN.Message:{const text=unpacker.unpackNullableString(),subject=unpacker.unpackNullableString(),sender=unpacker.unpackNullableString(),attachments=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackAttachment),stickers=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackModifier),tapbacks=clientProtocol5_unpackArray(unpacker,clientProtocol5_unpackModifier),sendStyle=unpacker.unpackNullableString(),statusCode=clientProtocol5_mapCodeMessageStatus(unpacker.unpackInt()),errorCode=function clientProtocol5_mapCodeDBError(code){switch(code){case clientProtocol5_NRCMessageDBState.OK:return;case clientProtocol5_NRCMessageDBState.Unknown:default:return stateCodes.FO.ServerUnknown;case clientProtocol5_NRCMessageDBState.Network:return stateCodes.FO.AppleNetwork;case clientProtocol5_NRCMessageDBState.Unregistered:return stateCodes.FO.AppleUnregistered}}(unpacker.unpackInt());return{itemType,serverID,guid,chatGuid,date,text,subject,sender,attachments,stickers,tapbacks,sendStyle,status:statusCode,error:errorCode?{code:errorCode}:void 0,statusDate:new Date(unpacker.unpackLong())}}case stateCodes.QN.ParticipantAction:{const user=unpacker.unpackNullableString(),target=unpacker.unpackNullableString();return{itemType,serverID,guid,chatGuid,date,type:function clientProtocol5_mapParticipantActionType(code){switch(code){case clientProtocol5_NSTGroupActionType.Unknown:default:return stateCodes.rk.Unknown;case clientProtocol5_NSTGroupActionType.Join:return stateCodes.rk.Join;case clientProtocol5_NSTGroupActionType.Leave:return stateCodes.rk.Leave}}(unpacker.unpackInt()),user,target}}case stateCodes.QN.ChatRenameAction:return{itemType,serverID,guid,chatGuid,date,user:unpacker.unpackNullableString(),chatName:unpacker.unpackNullableString()}}}function clientProtocol5_unpackAttachment(unpacker){const guid=unpacker.unpackString(),name=unpacker.unpackString(),type=unpacker.unpackNullableString()??"application/octet-stream",size=unpacker.unpackLong(),checksum=unpacker.unpackNullablePayload(),checksumString=checksum&&(0,encodingUtils.CB)(checksum);unpacker.unpackLong();return{guid,name,type,size,checksum:checksumString}}function clientProtocol5_unpackModifier(unpacker){const type=unpacker.unpackInt(),messageGuid=unpacker.unpackString();switch(type){default:return console.warn(`Unknown modifier item type ${type}`),null;case clientProtocol5_NSTModifierType.Activity:{const status=clientProtocol5_mapCodeMessageStatus(unpacker.unpackInt()),date=new Date(unpacker.unpackLong());return{type:stateCodes.KI.StatusUpdate,messageGuid,status,date}}case clientProtocol5_NSTModifierType.Sticker:{const index=unpacker.unpackInt();unpacker.unpackString();const sender=unpacker.unpackNullableString(),date=new Date(unpacker.unpackLong()),data=pako_esm.ZP.inflate(new Uint8Array(unpacker.unpackPayload())),dataType=unpacker.unpackString();return{type:stateCodes.KI.Sticker,messageGuid,messageIndex:index,sender,date,dataType,data}}case clientProtocol5_NSTModifierType.Tapback:{const index=unpacker.unpackInt(),sender=unpacker.unpackNullableString(),isAddition=unpacker.unpackBoolean(),dbTapbackType=unpacker.unpackInt(),tapbackType=function clientProtocol5_mapTapbackType(code){switch(code){case 0:return stateCodes.cM.Love;case 1:return stateCodes.cM.Like;case 2:return stateCodes.cM.Dislike;case 3:return stateCodes.cM.Laugh;case 4:return stateCodes.cM.Emphasis;case 5:return stateCodes.cM.Question;default:return}}(dbTapbackType);return void 0===tapbackType?(console.warn(`Unknown Apple tapback type ${dbTapbackType}`),null):{type:stateCodes.KI.Tapback,messageGuid,messageIndex:index,sender,isAddition,tapbackType}}}}function clientProtocol5_mapCodeMessageStatus(code){switch(code){default:case clientProtocol5_NRCMessageReceiptState.Idle:return stateCodes.Bu.Idle;case clientProtocol5_NRCMessageReceiptState.Sent:return stateCodes.Bu.Sent;case clientProtocol5_NRCMessageReceiptState.Delivered:return stateCodes.Bu.Delivered;case clientProtocol5_NRCMessageReceiptState.Read:return stateCodes.Bu.Read}}var eventEmitter=__webpack_require__("./src/util/eventEmitter.ts");var secureStorageUtils=__webpack_require__("./src/util/secureStorageUtils.ts");class ResolveablePromise{constructor(){this.promise=new Promise(((resolve,reject)=>{this.promiseResolve=resolve,this.promiseReject=reject}))}resolve(value){this.promiseResolve(value)}reject(reason){this.promiseReject(reason)}}class ResolveablePromiseTimeout extends ResolveablePromise{timeoutID=void 0;timeout(duration,reason){void 0!==this.timeoutID&&clearTimeout(this.timeoutID),this.timeoutID=setTimeout((()=>{this.reject(reason)}),duration)}clearTimeout(){void 0!==this.timeoutID&&(clearTimeout(this.timeoutID),this.timeoutID=void 0)}resolve(value){this.clearTimeout(),super.resolve(value)}reject(reason){this.clearTimeout(),super.reject(reason)}}const connectionManager_targetCommVer=[5,5],targetCommVerString=connectionManager_targetCommVer.join(".");let _serverSystemVersion,_serverSoftwareVersion,_serverComputerName;function getServerSystemVersion(){return _serverSystemVersion}function getServerSoftwareVersion(){return _serverSoftwareVersion}function getServerComputerName(){return _serverComputerName}const communicationsPriorityList=[class ClientComm5 extends CommunicationsManager{protocolManager=null;handleOpen(){this.startTimeoutTimer()}handleClose(reason){this.stopTimeoutTimer(),this.protocolManager=null,this.protocolManagerVer=void 0}startTimeoutTimer(){this.handshakeTimeout=setTimeout(this.handleHandshakeTimeout.bind(this),1e4)}stopTimeoutTimer(){this.handshakeTimeout&&clearTimeout(this.handshakeTimeout)}handleMessage(data,isEncrypted){if(this.protocolManager)return void this.protocolManager.processData(data,isEncrypted);const unpacker=new AirUnpacker(data);100===unpacker.unpackInt()&&this.processServerInformation(unpacker)}processServerInformation(unpacker){this.stopTimeoutTimer(),this.startTimeoutTimer();const commVer=unpacker.unpackInt(),commSubVer=unpacker.unpackInt();if(5!==commVer)return void this.disconnect(commVer<5?stateCodes.nD.ServerOutdated:stateCodes.nD.ClientOutdated);const protocolManagerOrError=this.findProtocolManager(commSubVer);"number"!=typeof protocolManagerOrError?(protocolManagerOrError.sendAuthenticationRequest(unpacker),this.protocolManager=protocolManagerOrError,this.protocolManagerVer=commSubVer):this.disconnect(protocolManagerOrError)}findProtocolManager(subVersion){switch(subVersion){case 4:return new ClientProtocol4(this,this.dataProxy);case 5:return new ClientProtocol5(this,this.dataProxy);default:return subVersion<4?stateCodes.nD.ServerOutdated:stateCodes.nD.ClientOutdated}}requestAttachmentDownload(requestID,attachmentGUID){return this.protocolManager?.requestAttachmentDownload(requestID,attachmentGUID)??!1}requestChatCreation(requestID,members,service){return this.protocolManager?.requestChatCreation(requestID,members,service)??!1}requestRetrievalTime(timeLower,timeUpper){return this.protocolManager?.requestRetrievalTime(timeLower,timeUpper)??!1}requestRetrievalID(idLower,timeLower,timeUpper){return this.protocolManager?.requestRetrievalID(idLower,timeLower,timeUpper)??!1}sendMessage(requestID,conversation,message){return this.protocolManager?.sendMessage(requestID,conversation,message)??!1}sendFile(requestID,conversation,file,progressCallback){return this.protocolManager?.sendFile(requestID,conversation,file,progressCallback)??Promise.reject({code:stateCodes.FO.LocalNetwork})}sendPing(){return!!this.protocolManager&&this.protocolManager.sendPing()}requestLiteConversations(){return this.protocolManager?.requestLiteConversation()??!1}requestConversationInfo(chatGUIDs){return this.protocolManager?.requestConversationInfo(chatGUIDs)??!1}requestLiteThread(chatGUID,firstMessageID){return this.protocolManager?.requestLiteThread(chatGUID,firstMessageID)||!1}requestInstallRemoteUpdate(updateID){return this.protocolManager?.requestInstallRemoteUpdate(updateID)||!1}requestFaceTimeLink(){return this.protocolManager?.requestFaceTimeLink()||!1}initiateFaceTimeCall(addresses){return this.protocolManager?.initiateFaceTimeCall(addresses)||!1}handleIncomingFaceTimeCall(caller,accept){return this.protocolManager?.handleIncomingFaceTimeCall(caller,accept)||!1}dropFaceTimeCallServer(){return this.protocolManager?.dropFaceTimeCallServer()||!1}handleHandshakeTimeout(){this.handshakeTimeout=void 0,this.disconnect(stateCodes.nD.Internet)}get communicationsVersion(){return void 0!==this.protocolManagerVer?[5,this.protocolManagerVer]:[5]}}];let reconnectTimeoutID,communicationsManager=null,dataProxy=new DataProxyConnect;let disableAutomaticReconnections=!1;const connectionListenerArray=[],remoteUpdateListenerArray=[],liteConversationPromiseArray=[],conversationDetailsPromiseMap=new Map,threadPromiseMap=new Map;let faceTimeLinkPromise,faceTimeInitiatePromise;class FileDownloadState{get accumulatedData(){return this.accumulator.data}get accumulatedDataLength(){return this.accumulator.length}downloadFileName=void 0;downloadFileType=void 0;constructor(promise,progressEmitter,timeoutCallback){this.promise=promise,this.progressEmitter=progressEmitter,this.timeoutCallback=timeoutCallback}initializeAccumulator(accumulator){this.accumulator=accumulator,this.refreshTimeout()}appendData(data){this.accumulator.push(data),this.refreshTimeout()}finish(){void 0!==this.timeoutID&&clearTimeout(this.timeoutID)}refreshTimeout(){void 0!==this.timeoutID&&clearTimeout(this.timeoutID),this.timeoutID=window.setTimeout(this.timeoutCallback,1e4)}}const fileDownloadStateMap=new Map,messageSendPromiseMap=new Map,chatCreatePromiseMap=new Map,messageUpdateEmitter=new eventEmitter.Z,modifierUpdateEmitter=new eventEmitter.Z,faceTimeSupportedEmitter=new eventEmitter.B(!1),incomingCallerEmitter=new eventEmitter.B,outgoingCalleeEmitter=new eventEmitter.B,callEventEmitter=new eventEmitter.Z,messageErrorNetwork={code:stateCodes.FO.LocalNetwork};let connState="disconnected",isConnectingPassively=!1,lastServerMessageID=null,lastConnectionUpdateTime=null,nextRequestID=0;function onOnline(){connect()}function onOffline(){!function disconnect(){communicationsManager?.disconnect(stateCodes.nD.Internet)}()}const communicationsManagerListener={onOpen(computerName,systemVersion,softwareVersion,supportsFaceTime){!function updateStateConnected(){connState="connected";for(const listener of connectionListenerArray)listener.onOpen()}(),_serverComputerName=computerName,_serverSystemVersion=systemVersion,_serverSoftwareVersion=softwareVersion,faceTimeSupportedEmitter.notify(supportsFaceTime),window.addEventListener("online",onOnline),window.addEventListener("offline",onOffline)},onClose(reason){rejectAndClear(liteConversationPromiseArray,messageErrorNetwork),rejectAndClear(conversationDetailsPromiseMap,messageErrorNetwork),rejectAndClear(threadPromiseMap,messageErrorNetwork);for(const state of fileDownloadStateMap.values())state.promise.reject(stateCodes.Xh.Timeout);fileDownloadStateMap.clear();for(const promise of messageSendPromiseMap.values())promise.reject(messageErrorNetwork);messageSendPromiseMap.clear();for(const promise of chatCreatePromiseMap.values())promise.reject([stateCodes.o_.Network,void 0]);chatCreatePromiseMap.clear(),faceTimeLinkPromise?.reject(stateCodes.L4.Network),faceTimeLinkPromise=void 0,faceTimeInitiatePromise?.reject(stateCodes.iO.Network),faceTimeInitiatePromise=void 0,function updateStateDisconnected(reason){connState="disconnected";for(const listener of connectionListenerArray)listener.onClose(reason)}(reason),incomingCallerEmitter.notify(void 0),outgoingCalleeEmitter.notify(void 0);for(const listener of remoteUpdateListenerArray)listener.onUpdate?.(void 0);reason!==stateCodes.nD.Connection&&reason!==stateCodes.nD.Internet||disableAutomaticReconnections||(reconnectTimeoutID=setTimeout((()=>{disableAutomaticReconnections||function connectPassive(){isConnectingPassively=!0,reconnectTimeoutID=void 0,connectFromList(0)}()}),8e3)),window.removeEventListener("online",onOnline),window.removeEventListener("offline",onOffline)},onPacket(){"connected"===connState&&(lastConnectionUpdateTime=new Date)},onMessageUpdate(data){messageUpdateEmitter.notify(data)},onConversationUpdate(data){const promiseMapKey=data.map((data=>data[0])).join(" "),promiseArray=conversationDetailsPromiseMap.get(promiseMapKey);if(promiseArray){for(const promise of promiseArray)promise.resolve(data);threadPromiseMap.delete(promiseMapKey)}},onModifierUpdate(data){modifierUpdateEmitter.notify(data)},onFileRequestStart(requestID,downloadFileName,downloadFileType,dataLength,accumulator){const state=fileDownloadStateMap.get(requestID);state&&(state.downloadFileName=downloadFileName,state.downloadFileType=downloadFileType,state.initializeAccumulator(accumulator),state.progressEmitter.notify({type:"size",value:dataLength}))},onFileRequestData(requestID,data){const state=fileDownloadStateMap.get(requestID);state&&(state.appendData(data),state.progressEmitter.notify({type:"downloaded",value:state.accumulatedDataLength}))},onFileRequestComplete(requestID){const state=fileDownloadStateMap.get(requestID);state&&(state.finish(),state.promise.resolve({data:state.accumulatedData,downloadName:state.downloadFileName,downloadType:state.downloadFileType}),fileDownloadStateMap.delete(requestID))},onFileRequestFail(requestID,error){const state=fileDownloadStateMap.get(requestID);state&&(state.promise.reject(error),fileDownloadStateMap.delete(requestID))},onIDUpdate(messageID){lastServerMessageID=messageID},onMessageConversations(data){for(const promise of liteConversationPromiseArray)promise.resolve(data);liteConversationPromiseArray.length=0},onMessageThread(chatGUID,firstMessageID,data){const promiseMapKey=JSON.stringify({chatGUID,firstMessageID}),promiseArray=threadPromiseMap.get(promiseMapKey);if(promiseArray){for(const promise of promiseArray)promise.resolve(data);threadPromiseMap.delete(promiseMapKey)}},onSendMessageResponse(requestID,error){const promise=messageSendPromiseMap.get(requestID);promise&&(void 0!==error?promise.reject(error):promise.resolve(!0),messageSendPromiseMap.delete(requestID))},onCreateChatResponse(requestID,error,details){const promise=chatCreatePromiseMap.get(requestID);promise&&(void 0===error?details?promise.resolve(details):promise.reject([stateCodes.o_.Network,void 0]):promise.reject([error,details]),chatCreatePromiseMap.delete(requestID))},onSoftwareUpdateListing(updateData){for(const listener of remoteUpdateListenerArray)listener.onUpdate?.(updateData)},onSoftwareUpdateInstall(installing){if(installing)for(const listener of remoteUpdateListenerArray)listener.onInitiate?.();else for(const listener of remoteUpdateListenerArray)listener.onError?.(stateCodes.Wl.Mismatch)},onSoftwareUpdateError(error,details){for(const listener of remoteUpdateListenerArray)listener.onError?.(error,details)},onFaceTimeNewLink(faceTimeLink){void 0!==faceTimeLinkPromise&&(void 0===faceTimeLink?faceTimeLinkPromise.reject(stateCodes.L4.External):faceTimeLinkPromise.resolve(faceTimeLink),faceTimeLinkPromise=void 0)},onFaceTimeOutgoingCallInitiated(resultCode,errorDetails){void 0!==faceTimeInitiatePromise&&(resultCode===stateCodes.iO.OK?faceTimeInitiatePromise.resolve():faceTimeInitiatePromise.reject([resultCode,errorDetails]),faceTimeInitiatePromise=void 0)},onFaceTimeOutgoingCallAccepted(faceTimeLink){callEventEmitter.notify({type:"outgoingAccepted",faceTimeLink}),outgoingCalleeEmitter.notify(void 0)},onFaceTimeOutgoingCallRejected(){callEventEmitter.notify({type:"outgoingRejected"}),outgoingCalleeEmitter.notify(void 0)},onFaceTimeOutgoingCallError(errorDetails){callEventEmitter.notify({type:"outgoingError",errorDetails}),outgoingCalleeEmitter.notify(void 0)},onFaceTimeIncomingCall(caller){incomingCallerEmitter.notify(caller)},onFaceTimeIncomingCallHandled(faceTimeLink){callEventEmitter.notify({type:"incomingHandled",faceTimeLink})},onFaceTimeIncomingCallError(errorDetails){callEventEmitter.notify({type:"incomingHandleError",errorDetails})}};function updateStateConnecting(){connState="connecting";for(const listener of connectionListenerArray)listener.onConnecting()}function generateRequestID(){const requestID=nextRequestID;return 32767===nextRequestID?nextRequestID=-32768:nextRequestID++,requestID}async function connect(){if(!(0,encryptionUtils.Vb)())try{await(0,encryptionUtils.Yt)(await(0,secureStorageUtils.fm)(secureStorageUtils.uJ.ServerPassword))}catch(error){console.warn(error)}if(isConnectingPassively)return updateStateConnecting(),void(isConnectingPassively=!1);reconnectTimeoutID&&(clearTimeout(reconnectTimeoutID),reconnectTimeoutID=void 0),updateStateConnecting(),connectFromList(0)}function connectFromList(index){communicationsManager=new communicationsPriorityList[index](dataProxy),communicationsManager.listener=communicationsManagerListener,communicationsManager.connect()}function isConnected(){return"connected"===connState}function requestTimeoutMap(key,map,timeoutReason=messageErrorNetwork,promise){const timedPromise=function promiseTimeout_promiseTimeout(timeout,timeoutReason,promise){const timeoutPromise=new Promise(((resolve,reject)=>{const id=setTimeout((()=>{clearTimeout(id),reject(timeoutReason)}),timeout)}));return Promise.race([promise,timeoutPromise])}(1e4,timeoutReason,promise);return timedPromise.catch((()=>map.delete(key))),timedPromise}function sendMessage(target,message){if(!isConnected())return Promise.reject(messageErrorNetwork);const requestID=generateRequestID();return requestTimeoutMap(requestID,messageSendPromiseMap,void 0,new Promise(((resolve,reject)=>{communicationsManager.sendMessage(requestID,target,message),messageSendPromiseMap.set(requestID,{resolve,reject})})))}function sendFile(chatGUID,file){const emitter=new eventEmitter.Z;if(!isConnected())return{emitter,promise:Promise.reject(messageErrorNetwork)};const promise=new Promise(((resolve,reject)=>{const requestID=generateRequestID();communicationsManager.sendFile(requestID,chatGUID,file,(progress=>emitter.notify(progress))).then((value=>{emitter.notify(value);const timeoutError={code:stateCodes.FO.LocalNetwork};setTimeout((()=>reject(timeoutError)),1e4)})).catch((error=>{reject(error),messageSendPromiseMap.delete(requestID)})),messageSendPromiseMap.set(requestID,{resolve,reject})}));return{emitter,promise}}function fetchThread(chatGUID,firstMessageID){if(!isConnected())return Promise.reject(messageErrorNetwork);const key=JSON.stringify({chatGUID,firstMessageID});return requestTimeoutMap(key,threadPromiseMap,void 0,new Promise(((resolve,reject)=>{communicationsManager.requestLiteThread(chatGUID,firstMessageID),pushKeyedArray(threadPromiseMap,key,{resolve,reject})})))}function fetchAttachment(attachmentGUID){const emitter=new eventEmitter.Z;if(!isConnected())return{emitter,promise:Promise.reject(stateCodes.Xh.Timeout)};const promise=new Promise(((resolve,reject)=>{const requestID=generateRequestID();communicationsManager.requestAttachmentDownload(requestID,attachmentGUID),fileDownloadStateMap.set(requestID,new FileDownloadState({resolve,reject},emitter,(()=>{fileDownloadStateMap.delete(requestID),reject()})))}));return{emitter,promise}}function createChat(members,service){if(!isConnected())return Promise.reject([stateCodes.o_.Network,void 0]);const requestID=generateRequestID();return requestTimeoutMap(requestID,chatCreatePromiseMap,[stateCodes.o_.Network,void 0],new Promise(((resolve,reject)=>{communicationsManager.requestChatCreation(requestID,members,service),chatCreatePromiseMap.set(requestID,{resolve,reject})})))}function installRemoteUpdate(updateID){isConnected()&&communicationsManager.requestInstallRemoteUpdate(updateID)}function requestFaceTimeLink(){return void 0!==faceTimeLinkPromise?faceTimeLinkPromise.promise:isConnected()?(faceTimeLinkPromise=new ResolveablePromiseTimeout,faceTimeLinkPromise.timeout(1e4,stateCodes.L4.Network),communicationsManager.requestFaceTimeLink(),faceTimeLinkPromise.promise):Promise.reject(stateCodes.L4.Network)}function initiateFaceTimeCall(addresses){return void 0!==faceTimeInitiatePromise?faceTimeInitiatePromise.promise:isConnected()?(faceTimeInitiatePromise=new ResolveablePromiseTimeout,faceTimeInitiatePromise.timeout(1e4,[stateCodes.iO.Network,void 0]),communicationsManager.initiateFaceTimeCall(addresses),outgoingCalleeEmitter.notify(addresses),faceTimeInitiatePromise.promise.catch((()=>{outgoingCalleeEmitter.notify(void 0)})),faceTimeInitiatePromise.promise):Promise.reject([stateCodes.iO.Network,void 0])}function addConnectionListener(listener){connectionListenerArray.push(listener)}function removeConnectionListener(listener){const index=connectionListenerArray.indexOf(listener,0);index>-1&&connectionListenerArray.splice(index,1)}function addRemoteUpdateListener(listener){remoteUpdateListenerArray.push(listener)}function removeRemoteUpdateListener(listener){const index=remoteUpdateListenerArray.indexOf(listener,0);index>-1&&remoteUpdateListenerArray.splice(index,1)}function getActiveCommVer(){return communicationsManager?.communicationsVersion}function getActiveProxyType(){return dataProxy.proxyType}function pushKeyedArray(map,key,value){const array=map.get(key);array?array.push(value):map.set(key,[value])}function rejectAndClear(items,reason){if(items instanceof Array){for(const promise of items)promise.reject(reason);items.length=0}else if(items instanceof Map){for(const promiseArray of items.values())for(const promise of promiseArray)promise.reject(reason);items.clear()}}},"./src/data/appleConstants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{SR:()=>appleServiceTextMessageForwarding,YC:()=>appleServiceAppleMessage,qU:()=>appleSendStyleBubbleInvisibleInk});const appleSendStyleBubbleInvisibleInk="com.apple.MobileSMS.expressivesend.invisibleink",appleServiceAppleMessage="iMessage",appleServiceTextMessageForwarding="SMS"},"./src/data/stateCodes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bu:()=>MessageStatusCode,FO:()=>MessageErrorCode,KI:()=>MessageModifierType,L4:()=>FaceTimeLinkErrorCode,QN:()=>ConversationItemType,Wl:()=>RemoteUpdateErrorCode,Xh:()=>AttachmentRequestErrorCode,cM:()=>TapbackType,iO:()=>FaceTimeInitiateCode,mZ:()=>ConversationPreviewType,nD:()=>ConnectionErrorCode,o_:()=>CreateChatErrorCode,rk:()=>ParticipantActionType});let ConversationItemType=function(ConversationItemType){return ConversationItemType[ConversationItemType.Message=0]="Message",ConversationItemType[ConversationItemType.ParticipantAction=1]="ParticipantAction",ConversationItemType[ConversationItemType.ChatRenameAction=2]="ChatRenameAction",ConversationItemType}({}),ConversationPreviewType=function(ConversationPreviewType){return ConversationPreviewType[ConversationPreviewType.Message=0]="Message",ConversationPreviewType[ConversationPreviewType.ChatCreation=1]="ChatCreation",ConversationPreviewType}({}),MessageModifierType=function(MessageModifierType){return MessageModifierType[MessageModifierType.StatusUpdate=0]="StatusUpdate",MessageModifierType[MessageModifierType.Sticker=1]="Sticker",MessageModifierType[MessageModifierType.Tapback=2]="Tapback",MessageModifierType}({}),TapbackType=function(TapbackType){return TapbackType[TapbackType.Love=0]="Love",TapbackType[TapbackType.Like=1]="Like",TapbackType[TapbackType.Dislike=2]="Dislike",TapbackType[TapbackType.Laugh=3]="Laugh",TapbackType[TapbackType.Emphasis=4]="Emphasis",TapbackType[TapbackType.Question=5]="Question",TapbackType}({}),ConnectionErrorCode=function(ConnectionErrorCode){return ConnectionErrorCode[ConnectionErrorCode.Connection=0]="Connection",ConnectionErrorCode[ConnectionErrorCode.Internet=1]="Internet",ConnectionErrorCode[ConnectionErrorCode.InternalError=2]="InternalError",ConnectionErrorCode[ConnectionErrorCode.ExternalError=3]="ExternalError",ConnectionErrorCode[ConnectionErrorCode.BadRequest=4]="BadRequest",ConnectionErrorCode[ConnectionErrorCode.ClientOutdated=5]="ClientOutdated",ConnectionErrorCode[ConnectionErrorCode.ServerOutdated=6]="ServerOutdated",ConnectionErrorCode[ConnectionErrorCode.Unauthorized=7]="Unauthorized",ConnectionErrorCode[ConnectionErrorCode.ConnectNoGroup=8]="ConnectNoGroup",ConnectionErrorCode[ConnectionErrorCode.ConnectNoCapacity=9]="ConnectNoCapacity",ConnectionErrorCode[ConnectionErrorCode.ConnectAccountValidation=10]="ConnectAccountValidation",ConnectionErrorCode[ConnectionErrorCode.ConnectNoActivation=11]="ConnectNoActivation",ConnectionErrorCode[ConnectionErrorCode.ConnectOtherLocation=12]="ConnectOtherLocation",ConnectionErrorCode}({}),MessageStatusCode=function(MessageStatusCode){return MessageStatusCode[MessageStatusCode.Unconfirmed=0]="Unconfirmed",MessageStatusCode[MessageStatusCode.Idle=1]="Idle",MessageStatusCode[MessageStatusCode.Sent=2]="Sent",MessageStatusCode[MessageStatusCode.Delivered=3]="Delivered",MessageStatusCode[MessageStatusCode.Read=4]="Read",MessageStatusCode}({}),MessageErrorCode=function(MessageErrorCode){return MessageErrorCode[MessageErrorCode.LocalInvalidContent=0]="LocalInvalidContent",MessageErrorCode[MessageErrorCode.LocalTooLarge=1]="LocalTooLarge",MessageErrorCode[MessageErrorCode.LocalIO=2]="LocalIO",MessageErrorCode[MessageErrorCode.LocalNetwork=3]="LocalNetwork",MessageErrorCode[MessageErrorCode.LocalInternalError=4]="LocalInternalError",MessageErrorCode[MessageErrorCode.ServerUnknown=5]="ServerUnknown",MessageErrorCode[MessageErrorCode.ServerExternal=6]="ServerExternal",MessageErrorCode[MessageErrorCode.ServerBadRequest=7]="ServerBadRequest",MessageErrorCode[MessageErrorCode.ServerUnauthorized=8]="ServerUnauthorized",MessageErrorCode[MessageErrorCode.ServerTimeout=9]="ServerTimeout",MessageErrorCode[MessageErrorCode.AppleNoConversation=10]="AppleNoConversation",MessageErrorCode[MessageErrorCode.AppleNetwork=11]="AppleNetwork",MessageErrorCode[MessageErrorCode.AppleUnregistered=12]="AppleUnregistered",MessageErrorCode}({}),ParticipantActionType=function(ParticipantActionType){return ParticipantActionType[ParticipantActionType.Unknown=0]="Unknown",ParticipantActionType[ParticipantActionType.Join=1]="Join",ParticipantActionType[ParticipantActionType.Leave=2]="Leave",ParticipantActionType}({}),AttachmentRequestErrorCode=function(AttachmentRequestErrorCode){return AttachmentRequestErrorCode[AttachmentRequestErrorCode.Timeout=0]="Timeout",AttachmentRequestErrorCode[AttachmentRequestErrorCode.BadResponse=1]="BadResponse",AttachmentRequestErrorCode[AttachmentRequestErrorCode.ServerUnknown=2]="ServerUnknown",AttachmentRequestErrorCode[AttachmentRequestErrorCode.ServerNotFound=3]="ServerNotFound",AttachmentRequestErrorCode[AttachmentRequestErrorCode.ServerNotSaved=4]="ServerNotSaved",AttachmentRequestErrorCode[AttachmentRequestErrorCode.ServerUnreadable=5]="ServerUnreadable",AttachmentRequestErrorCode[AttachmentRequestErrorCode.ServerIO=6]="ServerIO",AttachmentRequestErrorCode}({}),CreateChatErrorCode=function(CreateChatErrorCode){return CreateChatErrorCode[CreateChatErrorCode.Network=0]="Network",CreateChatErrorCode[CreateChatErrorCode.ScriptError=1]="ScriptError",CreateChatErrorCode[CreateChatErrorCode.BadRequest=2]="BadRequest",CreateChatErrorCode[CreateChatErrorCode.Unauthorized=3]="Unauthorized",CreateChatErrorCode[CreateChatErrorCode.NotSupported=4]="NotSupported",CreateChatErrorCode[CreateChatErrorCode.UnknownExternal=5]="UnknownExternal",CreateChatErrorCode}({}),RemoteUpdateErrorCode=function(RemoteUpdateErrorCode){return RemoteUpdateErrorCode[RemoteUpdateErrorCode.Unknown=0]="Unknown",RemoteUpdateErrorCode[RemoteUpdateErrorCode.Mismatch=1]="Mismatch",RemoteUpdateErrorCode[RemoteUpdateErrorCode.Download=2]="Download",RemoteUpdateErrorCode[RemoteUpdateErrorCode.BadPackage=3]="BadPackage",RemoteUpdateErrorCode[RemoteUpdateErrorCode.Internal=4]="Internal",RemoteUpdateErrorCode[RemoteUpdateErrorCode.ReadOnlyVolume=5]="ReadOnlyVolume",RemoteUpdateErrorCode[RemoteUpdateErrorCode.Timeout=6]="Timeout",RemoteUpdateErrorCode}({}),FaceTimeLinkErrorCode=function(FaceTimeLinkErrorCode){return FaceTimeLinkErrorCode[FaceTimeLinkErrorCode.Network=0]="Network",FaceTimeLinkErrorCode[FaceTimeLinkErrorCode.External=1]="External",FaceTimeLinkErrorCode}({}),FaceTimeInitiateCode=function(FaceTimeInitiateCode){return FaceTimeInitiateCode[FaceTimeInitiateCode.OK=0]="OK",FaceTimeInitiateCode[FaceTimeInitiateCode.Network=1]="Network",FaceTimeInitiateCode[FaceTimeInitiateCode.Timeout=2]="Timeout",FaceTimeInitiateCode[FaceTimeInitiateCode.BadMembers=3]="BadMembers",FaceTimeInitiateCode[FaceTimeInitiateCode.External=4]="External",FaceTimeInitiateCode}({})},"./src/secrets.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Vb:()=>connectHostname,Ze:()=>jwkLocalEncryption});const connectHostname="wss://connect-open.airmessage.org",jwkLocalEncryption={kty:"oct",k:"s9lDeHtl0rh-3FpBDZwQvw",alg:"A128GCM"}},"./src/util/conversationUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{As:()=>getMemberTitleSync,HU:()=>isModifierTapback,If:()=>getMessageFlow,NJ:()=>isModifierSticker,Tg:()=>formatAddress,Xf:()=>generateMessageLocalID,Z6:()=>findMatchingUnconfirmedMessageIndex,hO:()=>isModifierStatusUpdate,kG:()=>checkMessageConversationOwnership,mJ:()=>mimeTypeToPreview,mM:()=>generateConversationLocalID,pN:()=>isConversationPreviewMessage,se:()=>generateAttachmentLocalID});var _data_stateCodes__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/data/stateCodes.ts"),libphonenumber_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/libphonenumber-js/min/exports/parsePhoneNumberFromString.js"),shared_util_languageUtils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/util/languageUtils.ts");function getMemberTitleSync(members,peopleState){return(0,shared_util_languageUtils__WEBPACK_IMPORTED_MODULE_0__.mC)(members.map((address=>peopleState.getPerson(address)?.name??address)))}function mimeTypeToPreview(type){return type.startsWith("image/")?"Image file":type.startsWith("video/")?"Video file":type.startsWith("audio/")?"Audio message":"Attachment file"}function isConversationItemMessage(item){return item.itemType===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.QN.Message}function isConversationPreviewMessage(item){return item.type===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.mZ.Message}function isModifierStatusUpdate(item){return item.type===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.KI.StatusUpdate}function isModifierSticker(item){return item.type===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.KI.Sticker}function isModifierTapback(item){return item.type===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.KI.Tapback}function getMessageFlow(main,above,below){const messageFlow={anchorTop:!1,anchorBottom:!1,showDivider:!0};if(above&&isConversationItemMessage(above)){const timeDiff=Math.abs(main.date.getTime()-above.date.getTime());messageFlow.anchorTop=main.sender===above.sender&&timeDiff<3e4,messageFlow.showDivider=timeDiff>3e5}if(below&&isConversationItemMessage(below)){const timeDiff=Math.abs(main.date.getTime()-below.date.getTime());messageFlow.anchorBottom=main.sender===below.sender&&timeDiff<3e4}return messageFlow}function formatAddress(address){if(address.includes("@"))return address;const phone=(0,libphonenumber_js__WEBPACK_IMPORTED_MODULE_2__._)(address);return phone?phone.formatNational():address}let nextConversationLocalID=0;function generateConversationLocalID(){return nextConversationLocalID++}let nextMessageLocalID=0;function generateMessageLocalID(){return nextMessageLocalID++}let nextAttachmentLocalID=0;function generateAttachmentLocalID(){return nextAttachmentLocalID++}function checkMessageConversationOwnership(conversation,item){if(void 0!==item.chatGuid){if(!conversation.localOnly)return item.chatGuid===conversation.guid}else if(void 0!==item.chatLocalID)return item.chatLocalID===conversation.localID;return!1}function findMatchingUnconfirmedMessageIndex(itemArray,newItem){return void 0!==newItem.sender?-1:void 0!==newItem.text&&0===newItem.attachments.length?itemArray.findIndex((existingItem=>existingItem.itemType===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.QN.Message&&existingItem.status===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.Bu.Unconfirmed&&void 0===existingItem.sender&&0===existingItem.attachments.length&&existingItem.text===newItem.text)):void 0===newItem.text&&1===newItem.attachments.length&&void 0!==newItem.attachments[0].checksum?itemArray.findIndex((existingItem=>existingItem.itemType===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.QN.Message&&existingItem.status===_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.Bu.Unconfirmed&&void 0===existingItem.sender&&1===existingItem.attachments.length&&existingItem.attachments[0].checksum===newItem.attachments[0].checksum)):-1}},"./src/util/encodingUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CB:()=>arrayBufferToHex,NV:()=>decodeBase64,oF:()=>encodeBase64});var js_base64__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/js-base64/base64.mjs");function encodeBase64(value){return js_base64__WEBPACK_IMPORTED_MODULE_0__.DS.fromUint8Array(new Uint8Array(value))}function decodeBase64(value){return js_base64__WEBPACK_IMPORTED_MODULE_0__.DS.toUint8Array(value)}function arrayBufferToHex(data){return Array.prototype.map.call(new Uint8Array(data),(x=>("00"+x.toString(16)).slice(-2))).join("")}},"./src/util/encryptionUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Vb:()=>isCryptoPasswordSet,Yt:()=>setCryptoPassword,ow:()=>decryptData,p:()=>isCryptoPasswordAvailable,q6:()=>encryptData});let userKey,cryptoPasswordSet=!1;async function setCryptoPassword(password){cryptoPasswordSet=!0,userKey=null==password?void 0:await crypto.subtle.importKey("raw",(new TextEncoder).encode(password),"PBKDF2",!1,["deriveKey"])}function isCryptoPasswordSet(){return cryptoPasswordSet}function isCryptoPasswordAvailable(){return void 0!==userKey}async function encryptData(inData){const salt=new Uint8Array(8);crypto.getRandomValues(salt);const iv=new Uint8Array(12);crypto.getRandomValues(iv);const derivedKey=await crypto.subtle.deriveKey({name:"PBKDF2",salt,iterations:1e4,hash:"SHA-256"},userKey,{name:"AES-GCM",length:128},!1,["encrypt"]),encrypted=await crypto.subtle.encrypt({name:"AES-GCM",iv},derivedKey,inData),returnData=new Uint8Array(20+encrypted.byteLength);return returnData.set(salt,0),returnData.set(iv,8),returnData.set(new Uint8Array(encrypted),20),returnData.buffer}async function decryptData(inData){const salt=inData.slice(0,8),iv=inData.slice(8,20),data=inData.slice(20),derivedKey=await crypto.subtle.deriveKey({name:"PBKDF2",salt,iterations:1e4,hash:"SHA-256"},userKey,{name:"AES-GCM",length:128},!1,["decrypt"]);return await crypto.subtle.decrypt({name:"AES-GCM",iv},derivedKey,data)}},"./src/util/eventEmitter.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>CachedEventEmitter,Z:()=>EventEmitter});class EventEmitter{listeners=[];subscribe(listener,unsubscribeConsumer){this.listeners.push(listener);const unsubscribeCallback=()=>this.unsubscribe(listener);return unsubscribeConsumer?.(unsubscribeCallback),unsubscribeCallback}unsubscribe(listener){const index=this.listeners.indexOf(listener,0);-1!==index&&this.listeners.splice(index,1)}notify(event){for(const listener of this.listeners)listener(event)}}class CachedEventEmitter extends EventEmitter{lastEvent=null;constructor(lastEvent=null){super(),this.lastEvent=lastEvent}subscribe(listener){return super.subscribe(listener),null!==this.lastEvent&&listener(this.lastEvent),()=>this.unsubscribe(listener)}notify(event){super.notify(event),this.lastEvent=event}}},"./src/util/languageUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{LF:()=>attachmentRequestErrorCodeToDisplay,OW:()=>messageErrorToDisplay,mC:()=>buildListString,o9:()=>remoteUpdateErrorCodeToDisplay,q_:()=>errorCodeToShortDisplay,sS:()=>formatFileSize,yj:()=>mapServiceName});var shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/data/stateCodes.ts"),shared_connection_connectionManager__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/connection/connectionManager.ts"),firebase_auth__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/firebase/auth/dist/index.esm.js"),shared_data_appleConstants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/data/appleConstants.ts");const buttonActionRetry={label:"Retry",onClick:()=>{(0,shared_connection_connectionManager__WEBPACK_IMPORTED_MODULE_1__.$j)()}};function messageErrorToDisplay(error){switch(error){case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.LocalInvalidContent:return"The selected content is unavailable";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.LocalTooLarge:return"The selected content is too large to send";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.LocalIO:return"Couldn't process selected content";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.LocalNetwork:return"Couldn't connect to AirMessage server";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.LocalInternalError:return"An internal error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.ServerUnknown:return"An unknown external error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.ServerExternal:return"An external error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.ServerBadRequest:return"An error occurred while sending this message";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.ServerUnauthorized:return"AirMessage server isn't allowed to send messages";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.ServerTimeout:return"This message couldn't be delivered properly";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.AppleNoConversation:return"This conversation isn't available";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.AppleNetwork:return"Couldn't connect to iMessage server";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.FO.AppleUnregistered:return"This recipient is not registered with iMessage";default:return"An unknown error occurred"}}function errorCodeToShortDisplay(error,isDirect){switch(error){case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.Connection:case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.Internet:return{message:isDirect?"Server not reachable":"No internet connection"};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.InternalError:return{message:"An internal error occurred",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ExternalError:return{message:"An external error occurred",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.BadRequest:return{message:"A connection compatibility error occurred",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ClientOutdated:return{message:"App is out-of-date",button:{label:"Refresh",onClick:()=>{window.location.reload()}}};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ServerOutdated:return{message:"Server is out-of-date",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.Unauthorized:return{message:"Password not accepted",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ConnectNoGroup:return{message:"Personal server not reachable",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ConnectNoCapacity:return{message:"Connected device limit reached",button:buttonActionRetry};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ConnectAccountValidation:return{message:"Account verification error",button:{label:"Sign out",onClick:()=>{(0,firebase_auth__WEBPACK_IMPORTED_MODULE_0__.w7)((0,firebase_auth__WEBPACK_IMPORTED_MODULE_0__.v0)())}}};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ConnectNoActivation:return{message:"Account not activated"};case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.nD.ConnectOtherLocation:return{message:"Server computer swapped",button:{label:"Refresh",onClick:()=>{window.location.reload()}}}}}function remoteUpdateErrorCodeToDisplay(error){switch(error){case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.Unknown:default:return"An unknown error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.Mismatch:return"This update is no longer applicable";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.Download:return"An error occurred while downloading the update";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.BadPackage:return"An error occurred while processing the update";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.Internal:return"An internal error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.ReadOnlyVolume:return"On your Mac, please move AirMessage to the Applications folder to continue";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Wl.Timeout:return"Request timed out"}}function buildListString(parts){return 0===parts.length?"":1===parts.length?parts[0]:2===parts.length?`${parts[0]} and ${parts[1]}`:parts.slice(0,parts.length-1).join(", ")+", and "+parts[parts.length-1]}function attachmentRequestErrorCodeToDisplay(error){switch(error){case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.Timeout:return"Request timed out";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.BadResponse:return"A communication error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.ServerUnknown:return"An unknown external error occurred";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.ServerNotFound:return"Message not found";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.ServerNotSaved:return"Attachment file not found";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.ServerUnreadable:return"No permission to read file";case shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_2__.Xh.ServerIO:return"Failed to read file"}}function mapServiceName(service){switch(service){case shared_data_appleConstants__WEBPACK_IMPORTED_MODULE_3__.YC:return"iMessage";case shared_data_appleConstants__WEBPACK_IMPORTED_MODULE_3__.SR:return"Text message";default:return"Unknown"}}const sizeUnits=["bytes","KB","MB","GB","TB","PB","EB","ZB","YB"];function formatFileSize(bytes,decimals=2){if(0===bytes)return"0 bytes";const dm=Math.max(decimals,0),i=Math.floor(Math.log(bytes)/Math.log(1024));return parseFloat((bytes/Math.pow(1024,i)).toFixed(dm))+" "+sizeUnits[i]}},"./src/util/secureStorageUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{dk:()=>setSecureLS,fm:()=>getSecureLS,uJ:()=>SecureStorageKey});var _secrets__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/secrets.ts"),shared_util_encodingUtils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/util/encodingUtils.ts");let SecureStorageKey=function(SecureStorageKey){return SecureStorageKey.ServerPassword="serverPassword",SecureStorageKey.GoogleRefreshToken="googleRefreshToken",SecureStorageKey}({});const cryptoKey=crypto.subtle.importKey("jwk",_secrets__WEBPACK_IMPORTED_MODULE_0__.Ze,"AES-GCM",!1,["encrypt","decrypt"]);async function encrypt(inData,generateIV){if(generateIV){const iv=window.crypto.getRandomValues(new Uint8Array(12));return function concatBuffers(buffer1,buffer2){const tmp=new Uint8Array(buffer1.byteLength+buffer2.byteLength);return tmp.set(new Uint8Array(buffer1),0),tmp.set(new Uint8Array(buffer2),buffer1.byteLength),tmp}(iv,await crypto.subtle.encrypt({name:"AES-GCM",iv},await cryptoKey,inData))}return crypto.subtle.encrypt({name:"AES-GCM",iv:new Uint8Array(12)},await cryptoKey,inData)}async function encryptString(value,generateIV){return(0,shared_util_encodingUtils__WEBPACK_IMPORTED_MODULE_1__.oF)(await encrypt((new TextEncoder).encode(value),generateIV))}async function decryptString(value,useIV){return(new TextDecoder).decode(await async function decrypt(inData,useIV){if(useIV){const iv=inData.slice(0,12),data=inData.slice(12);return crypto.subtle.decrypt({name:"AES-GCM",iv},await cryptoKey,data)}return crypto.subtle.decrypt({name:"AES-GCM",iv:new Int8Array(12)},await cryptoKey,inData)}((0,shared_util_encodingUtils__WEBPACK_IMPORTED_MODULE_1__.NV)(value),useIV))}async function setSecureLS(key,value){const encryptedKey=await encryptString(key,!1);void 0===value?localStorage.removeItem(encryptedKey):(value=await encryptString(value,!0),localStorage.setItem(encryptedKey,value))}async function getSecureLS(key){const value=localStorage.getItem(await encryptString(key,!1));return null===value?void 0:decryptString(value,!0)}}}]);