"use strict";(self.webpackChunkairmessage_react=self.webpackChunkairmessage_react||[]).push([[1180],{"./src/components/messaging/thread/item/stories/Message.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Message:()=>Message,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Message__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/messaging/thread/item/Message.tsx"),shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/data/stateCodes.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"components/messaging/thread",component:_Message__WEBPACK_IMPORTED_MODULE_0__.Z},Message={args:{flow:{anchorBottom:!1,anchorTop:!1,showDivider:!0},isGroupChat:!0,showStatus:!0,message:{date:new Date(Date.now()-864e5),sender:"Jon Doe",attachments:[{name:"Cover.jpg",size:1e3,type:"image/png"}],itemType:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.QN.Message,status:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.Bu.Delivered,tapbacks:[{isAddition:!0,sender:"Jon",tapbackType:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.cM.Laugh,type:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.KI.Sticker,messageIndex:0,messageGuid:"guid"},{isAddition:!0,sender:"Jon",tapbackType:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.cM.Like,type:shared_data_stateCodes__WEBPACK_IMPORTED_MODULE_1__.KI.Sticker,messageIndex:0,messageGuid:"guid2"}],stickers:[],text:"This is a message"}}};Message.parameters={...Message.parameters,docs:{...Message.parameters?.docs,source:{originalSource:'{\n  args: {\n    flow: {\n      anchorBottom: false,\n      anchorTop: false,\n      showDivider: true\n    },\n    isGroupChat: true,\n    showStatus: true,\n    message: {\n      date: new Date(Date.now() - 24 * 60 * 60 * 1000),\n      sender: "Jon Doe",\n      attachments: [{\n        name: "Cover.jpg",\n        size: 1000,\n        type: "image/png"\n      }],\n      itemType: ConversationItemType.Message,\n      status: MessageStatusCode.Delivered,\n      tapbacks: [{\n        isAddition: true,\n        sender: "Jon",\n        tapbackType: TapbackType.Laugh,\n        type: MessageModifierType.Sticker,\n        messageIndex: 0,\n        messageGuid: "guid"\n      }, {\n        isAddition: true,\n        sender: "Jon",\n        tapbackType: TapbackType.Like,\n        type: MessageModifierType.Sticker,\n        messageIndex: 0,\n        messageGuid: "guid2"\n      }],\n      stickers: [],\n      text: "This is a message"\n    }\n  }\n}',...Message.parameters?.docs?.source}}};const __namedExportsOrder=["Message"]}}]);